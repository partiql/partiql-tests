int::[
  // Would these give a compile-time error? Would COERCE mode error at compile-time?
  {
    name:"int overflow and underflow conditions{sql:\"9223372036854775808\"}",
    statement:"9223372036854775808",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"int overflow and underflow conditions{sql:\"-9223372036854775809\"}",
    statement:"-9223372036854775809",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
]

substring::[
  // Would the following test give an error in COERCE/permissive mode
  {
    name:"substring invalid quantity",
    statement:"substring('1', 4, -11)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]

'path-expressions'::[
  // Should the following error in COERCE mode or return MISSING? Or some other behavior
  {
    name:"path expression with ambiguous table alias (lowercase)",
    statement:"SELECT an_alias.f FROM table1 AS an_alias, table2 AS AN_ALIAS",
    env: {
      table1:[
        {
          f:"this is from table1"
        }
      ],
      table2:[
        {
          f:"this is from table2"
        }
      ]
    },
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]

'invalid-runtime-arguments'::[
  'date_add'::[
    {
      name:"date_add invalid quantity{time_part:\"year\",quantity:9999}",
      statement:"date_add(year, 9999, `9999-12-31T23:59:59Z`)",
      assert:[
        {
          evalMode:EvalModeError,
          result:EvaluationFail
        },
        {
          result:EvaluationSuccess,
          evalMode:EvalModeCoerce,
          output:$missing::null
        }
      ]
    },
    {
      name:"date_add invalid quantity{time_part:\"second\",quantity:1}",
      statement:"date_add(second, 1, `9999-12-31T23:59:59Z`)",
      assert:[
        {
          evalMode:EvalModeError,
          result:EvaluationFail
        },
        {
          result:EvaluationSuccess,
          evalMode:EvalModeCoerce,
          output:$missing::null
        }
      ]
    },
    {
      name:"date_add invalid quantity{time_part:\"year\",quantity:-10000}",
      statement:"date_add(year, -10000, `9999-12-31T23:59:59Z`)",
      assert:[
        {
          evalMode:EvalModeError,
          result:EvaluationFail
        },
        {
          result:EvaluationSuccess,
          evalMode:EvalModeCoerce,
          output:$missing::null
        }
      ]
    }
  ],
  'date_diff'::[
    {
      name:"date_diff invalid arguments{time_part:\"timezone_hour\"}",
      statement:"date_diff(timezone_hour, `2001T`, `1986T`)",
      assert:[
        {
          evalMode:EvalModeError,
          result:EvaluationFail
        },
        {
          result:EvaluationSuccess,
          evalMode:EvalModeCoerce,
          output:$missing::null
        }
      ]
    },
    {
      name:"date_diff invalid arguments{time_part:\"timezone_minute\"}",
      statement:"date_diff(timezone_minute, `2001T`, `1986T`)",
      assert:[
        {
          evalMode:EvalModeError,
          result:EvaluationFail
        },
        {
          result:EvaluationSuccess,
          evalMode:EvalModeCoerce,
          output:$missing::null
        }
      ]
    }
  ],
  like::[
    {
      name:"More than one character given for ESCAPE",
      statement:"SELECT * FROM `[true]` WHERE 'a' LIKE 'a' ESCAPE 'aa'",
      assert:[
        {
          evalMode:EvalModeError,
          result:EvaluationFail
        },
        {
          result:EvaluationSuccess,
          evalMode:EvalModeCoerce,
          output:$missing::null
        }
      ]
    }
  ]
]

'simple-group-by'::[
  // For the following tests, should it result in an error in COERCE mode?
  {
    name:"having without group by",
    statement:"SELECT rep, SUM(total_sales) as total FROM sales_report HAVING rep = \"Meg\"",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"GROUP BY binding referenced in FROM clause",
    statement:"SELECT * FROM sales_report, gb_binding WHERE fiscal_year >= `2001T` GROUP BY rep AS gb_binding",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"GROUP BY binding referenced in WHERE clause",
    statement:"SELECT * FROM sales_report, gb_binding WHERE gb_binding = 1 GROUP BY rep AS gb_binding",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"GROUP AS binding referenced in FROM clause",
    statement:"SELECT * FROM sales_report, gba_binding WHERE fiscal_year >= `2001T` GROUP BY rep GROUP AS gba_binding",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"GROUP AS binding referenced in WHERE clause",
    statement:"SELECT * FROM sales_report, gba_binding WHERE gba_binding = 1 GROUP BY rep GROUP AS gba_binding",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]

'repeated-field-on-struct'::[
  // binding tuples names are unique as per section 3.2. unsure about COERCE/PERMISSIVE mode behavior
  {
    name:"repeated field on struct is ambiguous{identifier:\"REPEATED\",cn:9,bn:\"REPEATED\"}",
    statement:"SELECT REPEATED FROM `[{repeated:1, repeated:2}]`",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"repeated field on struct is ambiguous{identifier:\" \\\"repeated\\\" \",cn:10,bn:\"repeated\"}",
    statement:"SELECT \"repeated\" FROM `[{repeated:1, repeated:2}]`",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]

to_timestamp::[
  // Invalid args
  {
    name:"to_timestamp invalid pattern{pattern:\"L\"}",
    statement:"to_timestamp('doesnt matter', 'L')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"O\"}",
    statement:"to_timestamp('doesnt matter', 'O')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"G\"}",
    statement:"to_timestamp('doesnt matter', 'G')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"u\"}",
    statement:"to_timestamp('doesnt matter', 'u')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"Q\"}",
    statement:"to_timestamp('doesnt matter', 'Q')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"q\"}",
    statement:"to_timestamp('doesnt matter', 'q')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"w\"}",
    statement:"to_timestamp('doesnt matter', 'w')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"W\"}",
    statement:"to_timestamp('doesnt matter', 'W')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"E\"}",
    statement:"to_timestamp('doesnt matter', 'E')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"e\"}",
    statement:"to_timestamp('doesnt matter', 'e')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"c\"}",
    statement:"to_timestamp('doesnt matter', 'c')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"F\"}",
    statement:"to_timestamp('doesnt matter', 'F')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"k\"}",
    statement:"to_timestamp('doesnt matter', 'k')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"K\"}",
    statement:"to_timestamp('doesnt matter', 'K')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"A\"}",
    statement:"to_timestamp('doesnt matter', 'A')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"V\"}",
    statement:"to_timestamp('doesnt matter', 'V')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"z\"}",
    statement:"to_timestamp('doesnt matter', 'z')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"p\"}",
    statement:"to_timestamp('doesnt matter', 'p')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"foobar\"}",
    statement:"to_timestamp('doesnt matter', 'foobar')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y MMMMM\"}",
    statement:"to_timestamp('doesnt matter', 'y MMMMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"M\",fields:\"YEAR\"}",
    statement:"to_timestamp('doesnt matter', 'M')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"dd\",fields:\"YEAR, MONTH_OF_YEAR\"}",
    statement:"to_timestamp('doesnt matter', 'dd')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"h\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH\"}",
    statement:"to_timestamp('doesnt matter', 'h')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"hh\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH\"}",
    statement:"to_timestamp('doesnt matter', 'hh')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"X\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"XX\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"XXX\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"x\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"xx\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"xxx\",fields:\"YEAR, MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y X\",fields:\"MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'y X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y M X\",fields:\"DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'y M X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y M d X\",fields:\"HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'y M d X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y a\",fields:\"MONTH_OF_YEAR, DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'y a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y M a\",fields:\"DAY_OF_MONTH, HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'y M a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid pattern{pattern:\"y M d a\",fields:\"HOUR_OF_DAY\"}",
    statement:"to_timestamp('doesnt matter', 'y M d a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y\"}",
    statement:"to_timestamp('some text', 'y')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"yy\"}",
    statement:"to_timestamp('some text', 'yy')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"yyyy\"}",
    statement:"to_timestamp('some text', 'yyyy')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M\"}",
    statement:"to_timestamp('some text', 'y M')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y MM\"}",
    statement:"to_timestamp('some text', 'y MM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y MMM\"}",
    statement:"to_timestamp('some text', 'y MMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y MMMM\"}",
    statement:"to_timestamp('some text', 'y MMMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d\"}",
    statement:"to_timestamp('some text', 'y M d')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M dd\"}",
    statement:"to_timestamp('some text', 'y M dd')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d h m a\"}",
    statement:"to_timestamp('some text', 'y M d h m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d hh m a\"}",
    statement:"to_timestamp('some text', 'y M d hh m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('some text', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H mm\"}",
    statement:"to_timestamp('some text', 'y M d H mm')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s\"}",
    statement:"to_timestamp('some text', 'y M d H m s')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m ss\"}",
    statement:"to_timestamp('some text', 'y M d H m ss')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s S\"}",
    statement:"to_timestamp('some text', 'y M d H m s S')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s SSS\"}",
    statement:"to_timestamp('some text', 'y M d H m s SSS')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s n\"}",
    statement:"to_timestamp('some text', 'y M d H m s n')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s X\"}",
    statement:"to_timestamp('some text', 'y M d H m s X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s XX\"}",
    statement:"to_timestamp('some text', 'y M d H m s XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s XXX\"}",
    statement:"to_timestamp('some text', 'y M d H m s XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s x\"}",
    statement:"to_timestamp('some text', 'y M d H m s x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s xx\"}",
    statement:"to_timestamp('some text', 'y M d H m s xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"some text\",pattern:\"y M d H m s xxx\"}",
    statement:"to_timestamp('some text', 'y M d H m s xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"-1\",pattern:\"y\"}",
    statement:"to_timestamp('-1', 'y')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"0\",pattern:\"y\"}",
    statement:"to_timestamp('0', 'y')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10000\",pattern:\"y\"}",
    statement:"to_timestamp('10000', 'y')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"9\",pattern:\"yy\"}",
    statement:"to_timestamp('9', 'yy')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"010\",pattern:\"yy\"}",
    statement:"to_timestamp('010', 'yy')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"010\",pattern:\"yyyy\"}",
    statement:"to_timestamp('010', 'yyyy')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"00010\",pattern:\"yyyy\"}",
    statement:"to_timestamp('00010', 'yyyy')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10\",pattern:\"y M\"}",
    statement:"to_timestamp('10', 'y M')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 -1\",pattern:\"y M\"}",
    statement:"to_timestamp('10 -1', 'y M')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 13\",pattern:\"y M\"}",
    statement:"to_timestamp('10 13', 'y M')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1\",pattern:\"y MM\"}",
    statement:"to_timestamp('10 1', 'y MM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 001\",pattern:\"y MM\"}",
    statement:"to_timestamp('10 001', 'y MM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1\",pattern:\"y MMM\"}",
    statement:"to_timestamp('10 1', 'y MMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 Fub\",pattern:\"y MMM\"}",
    statement:"to_timestamp('10 Fub', 'y MMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1\",pattern:\"y MMMM\"}",
    statement:"to_timestamp('10 1', 'y MMMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 Fubruary\",pattern:\"y MMMM\"}",
    statement:"to_timestamp('10 Fubruary', 'y MMMM')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1\",pattern:\"y M d\"}",
    statement:"to_timestamp('10 1', 'y M d')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 40\",pattern:\"y M d\"}",
    statement:"to_timestamp('10 1 40', 'y M d')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 -1\",pattern:\"y M d\"}",
    statement:"to_timestamp('10 1 -1', 'y M d')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1\",pattern:\"y M dd\"}",
    statement:"to_timestamp('10 1 1', 'y M dd')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 001\",pattern:\"y M dd\"}",
    statement:"to_timestamp('10 1 001', 'y M dd')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('10 1 1', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 -1 1\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('10 1 1 -1 1', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 25 1\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('10 1 1 25 1', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1\",pattern:\"y M d HH m\"}",
    statement:"to_timestamp('10 1 1 1 1', 'y M d HH m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 001 1\",pattern:\"y M d HH m\"}",
    statement:"to_timestamp('10 1 1 001 1', 'y M d HH m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('10 1 1 1', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 -1\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('10 1 1 1 -1', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 61\",pattern:\"y M d H m\"}",
    statement:"to_timestamp('10 1 1 1 61', 'y M d H m')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1\",pattern:\"y M d H mm\"}",
    statement:"to_timestamp('10 1 1 1 1', 'y M d H mm')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 001\",pattern:\"y M d H mm\"}",
    statement:"to_timestamp('10 1 1 1 001', 'y M d H mm')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 AM\",pattern:\"y M d h m a\"}",
    statement:"to_timestamp('10 1 1 AM', 'y M d h m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 -1 1 AM\",pattern:\"y M d h m a\"}",
    statement:"to_timestamp('10 1 1 -1 1 AM', 'y M d h m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 13 1 AM\",pattern:\"y M d h m a\"}",
    statement:"to_timestamp('10 1 1 13 1 AM', 'y M d h m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 AM\",pattern:\"y M d hh m a\"}",
    statement:"to_timestamp('10 1 1 1 1 AM', 'y M d hh m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 001 1 AM\",pattern:\"y M d hh m a\"}",
    statement:"to_timestamp('10 1 1 001 1 AM', 'y M d hh m a')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1\",pattern:\"y M d H m s\"}",
    statement:"to_timestamp('10 1 1 1 1', 'y M d H m s')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -1\",pattern:\"y M d H m s\"}",
    statement:"to_timestamp('10 1 1 1 1 -1', 'y M d H m s')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 25 1 61\",pattern:\"y M d H m s\"}",
    statement:"to_timestamp('10 1 1 25 1 61', 'y M d H m s')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1\",pattern:\"y M d HH m ss\"}",
    statement:"to_timestamp('10 1 1 1 1 1', 'y M d HH m ss')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 001\",pattern:\"y M d HH m ss\"}",
    statement:"to_timestamp('10 1 1 1 1 001', 'y M d HH m ss')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1\",pattern:\"y M d H m s S\"}",
    statement:"to_timestamp('10 1 1 1 1', 'y M d H m s S')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1 -0.1\",pattern:\"y M d H m s S\"}",
    statement:"to_timestamp('10 1 1 1 1 1 -0.1', 'y M d H m s S')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1 1.0\",pattern:\"y M d H m s S\"}",
    statement:"to_timestamp('10 1 1 1 1 1 1.0', 'y M d H m s S')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1 0.1\",pattern:\"y M d H m s SS\"}",
    statement:"to_timestamp('10 1 1 1 1 1 0.1', 'y M d H m s SS')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1 0.001\",pattern:\"y M d H m s SS\"}",
    statement:"to_timestamp('10 1 1 1 1 1 0.001', 'y M d H m s SS')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1\",pattern:\"y M d H m s n\"}",
    statement:"to_timestamp('10 1 1 1 1', 'y M d H m s n')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1 -1\",pattern:\"y M d H m s n\"}",
    statement:"to_timestamp('10 1 1 1 1 1 -1', 'y M d H m s n')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 1 1000000000\",pattern:\"y M d H m s n\"}",
    statement:"to_timestamp('10 1 1 1 1 1 1000000000', 'y M d H m s n')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +24\",pattern:\"y M d H m X\"}",
    statement:"to_timestamp('10 1 1 1 1 +24', 'y M d H m X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -24\",pattern:\"y M d H m X\"}",
    statement:"to_timestamp('10 1 1 1 1 -24', 'y M d H m X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 05\",pattern:\"y M d H m X\"}",
    statement:"to_timestamp('10 1 1 1 1 05', 'y M d H m X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +1\",pattern:\"y M d H m X\"}",
    statement:"to_timestamp('10 1 1 1 1 +1', 'y M d H m X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +1000000\",pattern:\"y M d H m X\"}",
    statement:"to_timestamp('10 1 1 1 1 +1000000', 'y M d H m X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -1\",pattern:\"y M d H m X\"}",
    statement:"to_timestamp('10 1 1 1 1 -1', 'y M d H m X')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 Z\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 Z', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +24\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 +24', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -24\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 -24', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 05\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 05', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +1\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 +1', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +1000000\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 +1000000', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -1\",pattern:\"y M d H m x\"}",
    statement:"to_timestamp('10 1 1 1 1 -1', 'y M d H m x')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +2400\",pattern:\"y M d H m XX\"}",
    statement:"to_timestamp('10 1 1 1 1 +2400', 'y M d H m XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -2400\",pattern:\"y M d H m XX\"}",
    statement:"to_timestamp('10 1 1 1 1 -2400', 'y M d H m XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 0500\",pattern:\"y M d H m XX\"}",
    statement:"to_timestamp('10 1 1 1 1 0500', 'y M d H m XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +100\",pattern:\"y M d H m XX\"}",
    statement:"to_timestamp('10 1 1 1 1 +100', 'y M d H m XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -100\",pattern:\"y M d H m XX\"}",
    statement:"to_timestamp('10 1 1 1 1 -100', 'y M d H m XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -10000\",pattern:\"y M d H m XX\"}",
    statement:"to_timestamp('10 1 1 1 1 -10000', 'y M d H m XX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 Z\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 Z', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +2400\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 +2400', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -2400\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 -2400', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 0500\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 0500', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +100\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 +100', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -100\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 -100', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -10000\",pattern:\"y M d H m xx\"}",
    statement:"to_timestamp('10 1 1 1 1 -10000', 'y M d H m xx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +24:00\",pattern:\"y M d H m XXX\"}",
    statement:"to_timestamp('10 1 1 1 1 +24:00', 'y M d H m XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -24:00\",pattern:\"y M d H m XXX\"}",
    statement:"to_timestamp('10 1 1 1 1 -24:00', 'y M d H m XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 05:00\",pattern:\"y M d H m XXX\"}",
    statement:"to_timestamp('10 1 1 1 1 05:00', 'y M d H m XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +1:00\",pattern:\"y M d H m XXX\"}",
    statement:"to_timestamp('10 1 1 1 1 +1:00', 'y M d H m XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -1:00\",pattern:\"y M d H m XXX\"}",
    statement:"to_timestamp('10 1 1 1 1 -1:00', 'y M d H m XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -001:00\",pattern:\"y M d H m XXX\"}",
    statement:"to_timestamp('10 1 1 1 1 -001:00', 'y M d H m XXX')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 Z\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 Z', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +24:00\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 +24:00', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -24:00\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 -24:00', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 05:00\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 05:00', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 +1:00\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 +1:00', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -1:00\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 -1:00', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_timestamp invalid string{string:\"10 1 1 1 1 -001:00\",pattern:\"y M d H m xxx\"}",
    statement:"to_timestamp('10 1 1 1 1 -001:00', 'y M d H m xxx')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]

to_string::[
  {
    name:"to_string invalid pattern{pattern:\"not_a_pattern\",cn:1}",
    statement:"to_string(`2000T`, 'not_a_pattern')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"G\",cn:1}",
    statement:"to_string(`2000T`, 'G')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"u\",cn:1}",
    statement:"to_string(`2000T`, 'u')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"Q\",cn:1}",
    statement:"to_string(`2000T`, 'Q')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"q\",cn:1}",
    statement:"to_string(`2000T`, 'q')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"w\",cn:1}",
    statement:"to_string(`2000T`, 'w')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"W\",cn:1}",
    statement:"to_string(`2000T`, 'W')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"E\",cn:1}",
    statement:"to_string(`2000T`, 'E')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"e\",cn:1}",
    statement:"to_string(`2000T`, 'e')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"c\",cn:1}",
    statement:"to_string(`2000T`, 'c')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"F\",cn:1}",
    statement:"to_string(`2000T`, 'F')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"k\",cn:1}",
    statement:"to_string(`2000T`, 'k')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"K\",cn:1}",
    statement:"to_string(`2000T`, 'K')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"A\",cn:1}",
    statement:"to_string(`2000T`, 'A')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"V\",cn:1}",
    statement:"to_string(`2000T`, 'V')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"z\",cn:1}",
    statement:"to_string(`2000T`, 'z')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"to_string invalid pattern{pattern:\"p\",cn:1}",
    statement:"to_string(`2000T`, 'p')",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
]

cast::[
  {
    name:"cast to int invalid values{value:\"'hello'\",target:\"STRING\"}",
    statement:"cast('hello' as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid values{value:\"'123456A'\",target:\"STRING\"}",
    statement:"cast('123456A' as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid values{value:\"'00xA'\",target:\"STRING\"}",
    statement:"cast('00xA' as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid values{value:\"'00b10'\",target:\"STRING\"}",
    statement:"cast('00b10' as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid values{value:\"'2e10'\",target:\"STRING\"}",
    statement:"cast('2e10' as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"`2017T`\",target:\"TIMESTAMP\"}",
    statement:"cast(`2017T` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\" `{{\\\"\\\"}}` \",target:\"CLOB\"}",
    statement:"cast( `{{\"\"}}` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\" `{{\\\"1\\\"}}` \",target:\"CLOB\"}",
    statement:"cast( `{{\"1\"}}` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"`{{}}`\",target:\"BLOB\"}",
    statement:"cast(`{{}}` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"[1, 2]\",target:\"LIST\"}",
    statement:"cast([1, 2] as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"[1]\",target:\"LIST\"}",
    statement:"cast([1] as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"[]\",target:\"LIST\"}",
    statement:"cast([] as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"`(1 2)`\",target:\"SEXP\"}",
    statement:"cast(`(1 2)` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"`(1)`\",target:\"SEXP\"}",
    statement:"cast(`(1)` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"`()`\",target:\"SEXP\"}",
    statement:"cast(`()` as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"{'a': 1}\",target:\"STRUCT\"}",
    statement:"cast({'a': 1} as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"{'a': '12'}\",target:\"STRUCT\"}",
    statement:"cast({'a': '12'} as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"{}\",target:\"STRUCT\"}",
    statement:"cast({} as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"<<1, 2>>\",target:\"BAG\"}",
    statement:"cast(<<1, 2>> as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"<<1>>\",target:\"BAG\"}",
    statement:"cast(<<1>> as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  },
  {
    name:"cast to int invalid target type{value:\"<<>>\",target:\"BAG\"}",
    statement:"cast(<<>> as INT)",
    assert:[
      {
        evalMode:EvalModeError,
        result:EvaluationFail
      },
      {
        result:EvaluationSuccess,
        evalMode:EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]
