'naughty-strings'::[
  {
    name:"big list of naughty strings{str:\"\"}",
    statement:"{ `literal`: '', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:""
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"",
        variable:"",
        concatenated:""
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"undefined\"}",
    statement:"{ `literal`: 'undefined', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"undefined"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"undefined",
        variable:"undefined",
        concatenated:"undefinedundefined"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"undef\"}",
    statement:"{ `literal`: 'undef', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"undef"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"undef",
        variable:"undef",
        concatenated:"undefundef"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"null\"}",
    statement:"{ `literal`: 'null', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"null"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"null",
        variable:"null",
        concatenated:"nullnull"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"NULL\"}",
    statement:"{ `literal`: 'NULL', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"NULL"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"NULL",
        variable:"NULL",
        concatenated:"NULLNULL"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"(null)\"}",
    statement:"{ `literal`: '(null)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"(null)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"(null)",
        variable:"(null)",
        concatenated:"(null)(null)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"nil\"}",
    statement:"{ `literal`: 'nil', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"nil"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"nil",
        variable:"nil",
        concatenated:"nilnil"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"NIL\"}",
    statement:"{ `literal`: 'NIL', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"NIL"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"NIL",
        variable:"NIL",
        concatenated:"NILNIL"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"true\"}",
    statement:"{ `literal`: 'true', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"true"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"true",
        variable:"true",
        concatenated:"truetrue"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"false\"}",
    statement:"{ `literal`: 'false', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"false"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"false",
        variable:"false",
        concatenated:"falsefalse"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"True\"}",
    statement:"{ `literal`: 'True', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"True"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"True",
        variable:"True",
        concatenated:"TrueTrue"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"False\"}",
    statement:"{ `literal`: 'False', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"False"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"False",
        variable:"False",
        concatenated:"FalseFalse"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"TRUE\"}",
    statement:"{ `literal`: 'TRUE', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"TRUE"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"TRUE",
        variable:"TRUE",
        concatenated:"TRUETRUE"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"FALSE\"}",
    statement:"{ `literal`: 'FALSE', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"FALSE"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"FALSE",
        variable:"FALSE",
        concatenated:"FALSEFALSE"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"None\"}",
    statement:"{ `literal`: 'None', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"None"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"None",
        variable:"None",
        concatenated:"NoneNone"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"hasOwnProperty\"}",
    statement:"{ `literal`: 'hasOwnProperty', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"hasOwnProperty"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"hasOwnProperty",
        variable:"hasOwnProperty",
        concatenated:"hasOwnPropertyhasOwnProperty"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\\\"}",
    statement:"{ `literal`: '\\', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\\"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\\",
        variable:"\\",
        concatenated:"\\\\"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\\\\\\\"}",
    statement:"{ `literal`: '\\\\', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\\\\"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\\\\",
        variable:"\\\\",
        concatenated:"\\\\\\\\"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0\"}",
    statement:"{ `literal`: '0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0",
        variable:"0",
        concatenated:"00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1\"}",
    statement:"{ `literal`: '1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1",
        variable:"1",
        concatenated:"11"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1.00\"}",
    statement:"{ `literal`: '1.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1.00",
        variable:"1.00",
        concatenated:"1.001.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1.00\"}",
    statement:"{ `literal`: '$1.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"$1.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"$1.00",
        variable:"$1.00",
        concatenated:"$1.00$1.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1/2\"}",
    statement:"{ `literal`: '1/2', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1/2"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1/2",
        variable:"1/2",
        concatenated:"1/21/2"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1E2\"}",
    statement:"{ `literal`: '1E2', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1E2"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1E2",
        variable:"1E2",
        concatenated:"1E21E2"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1E02\"}",
    statement:"{ `literal`: '1E02', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1E02"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1E02",
        variable:"1E02",
        concatenated:"1E021E02"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1E+02\"}",
    statement:"{ `literal`: '1E+02', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1E+02"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1E+02",
        variable:"1E+02",
        concatenated:"1E+021E+02"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1\"}",
    statement:"{ `literal`: '-1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1",
        variable:"-1",
        concatenated:"-1-1"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1.00\"}",
    statement:"{ `literal`: '-1.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1.00",
        variable:"-1.00",
        concatenated:"-1.00-1.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1.00\"}",
    statement:"{ `literal`: '-$1.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-$1.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-$1.00",
        variable:"-$1.00",
        concatenated:"-$1.00-$1.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1/2\"}",
    statement:"{ `literal`: '-1/2', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1/2"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1/2",
        variable:"-1/2",
        concatenated:"-1/2-1/2"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1E2\"}",
    statement:"{ `literal`: '-1E2', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1E2"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1E2",
        variable:"-1E2",
        concatenated:"-1E2-1E2"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1E02\"}",
    statement:"{ `literal`: '-1E02', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1E02"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1E02",
        variable:"-1E02",
        concatenated:"-1E02-1E02"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1E+02\"}",
    statement:"{ `literal`: '-1E+02', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1E+02"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1E+02",
        variable:"-1E+02",
        concatenated:"-1E+02-1E+02"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1/0\"}",
    statement:"{ `literal`: '1/0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1/0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1/0",
        variable:"1/0",
        concatenated:"1/01/0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0/0\"}",
    statement:"{ `literal`: '0/0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0/0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0/0",
        variable:"0/0",
        concatenated:"0/00/0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-2147483648/-1\"}",
    statement:"{ `literal`: '-2147483648/-1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-2147483648/-1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-2147483648/-1",
        variable:"-2147483648/-1",
        concatenated:"-2147483648/-1-2147483648/-1"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-9223372036854775808/-1\"}",
    statement:"{ `literal`: '-9223372036854775808/-1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-9223372036854775808/-1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-9223372036854775808/-1",
        variable:"-9223372036854775808/-1",
        concatenated:"-9223372036854775808/-1-9223372036854775808/-1"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-0\"}",
    statement:"{ `literal`: '-0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-0",
        variable:"-0",
        concatenated:"-0-0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-0.0\"}",
    statement:"{ `literal`: '-0.0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-0.0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-0.0",
        variable:"-0.0",
        concatenated:"-0.0-0.0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"+0\"}",
    statement:"{ `literal`: '+0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"+0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"+0",
        variable:"+0",
        concatenated:"+0+0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"+0.0\"}",
    statement:"{ `literal`: '+0.0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"+0.0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"+0.0",
        variable:"+0.0",
        concatenated:"+0.0+0.0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0.00\"}",
    statement:"{ `literal`: '0.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0.00",
        variable:"0.00",
        concatenated:"0.000.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0..0\"}",
    statement:"{ `literal`: '0..0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0..0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0..0",
        variable:"0..0",
        concatenated:"0..00..0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\".\"}",
    statement:"{ `literal`: '.', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"."
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:".",
        variable:".",
        concatenated:".."
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0.0.0\"}",
    statement:"{ `literal`: '0.0.0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0.0.0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0.0.0",
        variable:"0.0.0",
        concatenated:"0.0.00.0.0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0,00\"}",
    statement:"{ `literal`: '0,00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0,00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0,00",
        variable:"0,00",
        concatenated:"0,000,00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0,,0\"}",
    statement:"{ `literal`: '0,,0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0,,0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0,,0",
        variable:"0,,0",
        concatenated:"0,,00,,0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\",\"}",
    statement:"{ `literal`: ',', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:","
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:",",
        variable:",",
        concatenated:",,"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0,0,0\"}",
    statement:"{ `literal`: '0,0,0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0,0,0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0,0,0",
        variable:"0,0,0",
        concatenated:"0,0,00,0,0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0.0/0\"}",
    statement:"{ `literal`: '0.0/0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0.0/0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0.0/0",
        variable:"0.0/0",
        concatenated:"0.0/00.0/0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1.0/0.0\"}",
    statement:"{ `literal`: '1.0/0.0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1.0/0.0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1.0/0.0",
        variable:"1.0/0.0",
        concatenated:"1.0/0.01.0/0.0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0.0/0.0\"}",
    statement:"{ `literal`: '0.0/0.0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0.0/0.0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0.0/0.0",
        variable:"0.0/0.0",
        concatenated:"0.0/0.00.0/0.0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1,0/0,0\"}",
    statement:"{ `literal`: '1,0/0,0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1,0/0,0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1,0/0,0",
        variable:"1,0/0,0",
        concatenated:"1,0/0,01,0/0,0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0,0/0,0\"}",
    statement:"{ `literal`: '0,0/0,0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0,0/0,0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0,0/0,0",
        variable:"0,0/0,0",
        concatenated:"0,0/0,00,0/0,0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"--1\"}",
    statement:"{ `literal`: '--1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"--1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"--1",
        variable:"--1",
        concatenated:"--1--1"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-.\"}",
    statement:"{ `literal`: '-.', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-."
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-.",
        variable:"-.",
        concatenated:"-.-."
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-,\"}",
    statement:"{ `literal`: '-,', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-,"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-,",
        variable:"-,",
        concatenated:"-,-,"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\"}",
    statement:"{ `literal`: '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999",
        variable:"999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999",
        concatenated:"999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"NaN\"}",
    statement:"{ `literal`: 'NaN', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"NaN"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"NaN",
        variable:"NaN",
        concatenated:"NaNNaN"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Infinity\"}",
    statement:"{ `literal`: 'Infinity', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Infinity"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Infinity",
        variable:"Infinity",
        concatenated:"InfinityInfinity"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-Infinity\"}",
    statement:"{ `literal`: '-Infinity', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-Infinity"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-Infinity",
        variable:"-Infinity",
        concatenated:"-Infinity-Infinity"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"INF\"}",
    statement:"{ `literal`: 'INF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"INF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"INF",
        variable:"INF",
        concatenated:"INFINF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1#INF\"}",
    statement:"{ `literal`: '1#INF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1#INF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1#INF",
        variable:"1#INF",
        concatenated:"1#INF1#INF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-1#IND\"}",
    statement:"{ `literal`: '-1#IND', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-1#IND"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-1#IND",
        variable:"-1#IND",
        concatenated:"-1#IND-1#IND"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1#QNAN\"}",
    statement:"{ `literal`: '1#QNAN', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1#QNAN"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1#QNAN",
        variable:"1#QNAN",
        concatenated:"1#QNAN1#QNAN"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1#SNAN\"}",
    statement:"{ `literal`: '1#SNAN', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1#SNAN"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1#SNAN",
        variable:"1#SNAN",
        concatenated:"1#SNAN1#SNAN"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1#IND\"}",
    statement:"{ `literal`: '1#IND', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1#IND"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1#IND",
        variable:"1#IND",
        concatenated:"1#IND1#IND"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0x0\"}",
    statement:"{ `literal`: '0x0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0x0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0x0",
        variable:"0x0",
        concatenated:"0x00x0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0xffffffff\"}",
    statement:"{ `literal`: '0xffffffff', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0xffffffff"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0xffffffff",
        variable:"0xffffffff",
        concatenated:"0xffffffff0xffffffff"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0xffffffffffffffff\"}",
    statement:"{ `literal`: '0xffffffffffffffff', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0xffffffffffffffff"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0xffffffffffffffff",
        variable:"0xffffffffffffffff",
        concatenated:"0xffffffffffffffff0xffffffffffffffff"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0xabad1dea\"}",
    statement:"{ `literal`: '0xabad1dea', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0xabad1dea"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0xabad1dea",
        variable:"0xabad1dea",
        concatenated:"0xabad1dea0xabad1dea"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"123456789012345678901234567890123456789\"}",
    statement:"{ `literal`: '123456789012345678901234567890123456789', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"123456789012345678901234567890123456789"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"123456789012345678901234567890123456789",
        variable:"123456789012345678901234567890123456789",
        concatenated:"123456789012345678901234567890123456789123456789012345678901234567890123456789"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1,000.00\"}",
    statement:"{ `literal`: '1,000.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1,000.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1,000.00",
        variable:"1,000.00",
        concatenated:"1,000.001,000.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1 000.00\"}",
    statement:"{ `literal`: '1 000.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1 000.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1 000.00",
        variable:"1 000.00",
        concatenated:"1 000.001 000.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1,000,000.00\"}",
    statement:"{ `literal`: '1,000,000.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1,000,000.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1,000,000.00",
        variable:"1,000,000.00",
        concatenated:"1,000,000.001,000,000.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1 000 000.00\"}",
    statement:"{ `literal`: '1 000 000.00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1 000 000.00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1 000 000.00",
        variable:"1 000 000.00",
        concatenated:"1 000 000.001 000 000.00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1.000,00\"}",
    statement:"{ `literal`: '1.000,00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1.000,00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1.000,00",
        variable:"1.000,00",
        concatenated:"1.000,001.000,00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1 000,00\"}",
    statement:"{ `literal`: '1 000,00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1 000,00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1 000,00",
        variable:"1 000,00",
        concatenated:"1 000,001 000,00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1.000.000,00\"}",
    statement:"{ `literal`: '1.000.000,00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1.000.000,00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1.000.000,00",
        variable:"1.000.000,00",
        concatenated:"1.000.000,001.000.000,00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1 000 000,00\"}",
    statement:"{ `literal`: '1 000 000,00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1 000 000,00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1 000 000,00",
        variable:"1 000 000,00",
        concatenated:"1 000 000,001 000 000,00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"01000\"}",
    statement:"{ `literal`: '01000', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"01000"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"01000",
        variable:"01000",
        concatenated:"0100001000"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"08\"}",
    statement:"{ `literal`: '08', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"08"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"08",
        variable:"08",
        concatenated:"0808"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"09\"}",
    statement:"{ `literal`: '09', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"09"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"09",
        variable:"09",
        concatenated:"0909"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"2.2250738585072011e-308\"}",
    statement:"{ `literal`: '2.2250738585072011e-308', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"2.2250738585072011e-308"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"2.2250738585072011e-308",
        variable:"2.2250738585072011e-308",
        concatenated:"2.2250738585072011e-3082.2250738585072011e-308"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<>?:\\\"{}|_+\"}",
    statement:"{ `literal`: '<>?:\"{}|_+', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<>?:\"{}|_+"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<>?:\"{}|_+",
        variable:"<>?:\"{}|_+",
        concatenated:"<>?:\"{}|_+<>?:\"{}|_+"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"!@#%^&*()`~\"}",
    statement:"{ `literal`: '!@#$%^&*()`~', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"!@#$%^&*()`~"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"!@#$%^&*()`~",
        variable:"!@#$%^&*()`~",
        concatenated:"!@#$%^&*()`~!@#$%^&*()`~"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\x01\\x02\\x03\\x04\\x05\\x06\\a\\b\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x7f\"}",
    statement:"{ `literal`: '\x01\x02\x03\x04\x05\x06\a\b\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\x01\x02\x03\x04\x05\x06\a\b\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\x01\x02\x03\x04\x05\x06\a\b\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f",
        variable:"\x01\x02\x03\x04\x05\x06\a\b\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f",
        concatenated:"\x01\x02\x03\x04\x05\x06\a\b\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f\x01\x02\x03\x04\x05\x06\a\b\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x7f"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\x80\\x81\\x82\\x83\\x84\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\"}",
    statement:"{ `literal`: '\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f",
        variable:"\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f",
        concatenated:"\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\x80\x81\x82\x83\x84\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\t\\v\\f \\x85 \\u1680\\u2002\\u2003\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u202f\\u205f\\u3000\"}",
    statement:"{ `literal`: '\t\v\f \x85             ​    　', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\t\v\f \x85             ​    　"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\t\v\f \x85             ​    　",
        variable:"\t\v\f \x85             ​    　",
        concatenated:"\t\v\f \x85             ​    　\t\v\f \x85             ​    　"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\xad\\u0600\\u0601\\u0602\\u0603\\u0604\\u0605\\u061c\\u06dd\\u070f\\u180e\\u200b\\u200c\\u200d\\u200e\\u200f\\u202a\\u202b\\u202c\\u202d\\u202e\\u2060\\u2061\\u2062\\u2063\\u2064\\u2066\\u2067\\u2068\\u2069\\u206a\\u206b\\u206c\\u206d\\u206e\\u206f\\ufeff\\ufff9\\ufffa\\ufffb\\U000110bd\\U0001bca0\\U0001bca1\\U0001bca2\\U0001bca3\\U0001d173\\U0001d174\\U0001d175\\U0001d176\\U0001d177\\U0001d178\\U0001d179\\U0001d17a\\U000e0001\\U000e0020\\U000e0021\\U000e0022\\U000e0023\\U000e0024\\U000e0025\\U000e0026\\U000e0027\\U000e0028\\U000e0029\\U000e002a\\U000e002b\\U000e002c\\U000e002d\\U000e002e\\U000e002f\\U000e0030\\U000e0031\\U000e0032\\U000e0033\\U000e0034\\U000e0035\\U000e0036\\U000e0037\\U000e0038\\U000e0039\\U000e003a\\U000e003b\\U000e003c\\U000e003d\\U000e003e\\U000e003f\\U000e0040\\U000e0041\\U000e0042\\U000e0043\\U000e0044\\U000e0045\\U000e0046\\U000e0047\\U000e0048\\U000e0049\\U000e004a\\U000e004b\\U000e004c\\U000e004d\\U000e004e\\U000e004f\\U000e0050\\U000e0051\\U000e0052\\U000e0053\\U000e0054\\U000e0055\\U000e0056\\U000e0057\\U000e0058\\U000e0059\\U000e005a\\U000e005b\\U000e005c\\U000e005d\\U000e005e\\U000e005f\\U000e0060\\U000e0061\\U000e0062\\U000e0063\\U000e0064\\U000e0065\\U000e0066\\U000e0067\\U000e0068\\U000e0069\\U000e006a\\U000e006b\\U000e006c\\U000e006d\\U000e006e\\U000e006f\\U000e0070\\U000e0071\\U000e0072\\U000e0073\\U000e0074\\U000e0075\\U000e0076\\U000e0077\\U000e0078\\U000e0079\\U000e007a\\U000e007b\\U000e007c\\U000e007d\\U000e007e\\U000e007f\"}",
    statement:"{ `literal`: '­؀؁؂؃؄؅؜۝܏᠎​‌‍‎‏‪‫‬‭‮⁠⁡⁢⁣⁤⁦⁧⁨⁩⁪⁫⁬⁭⁮⁯﻿￹￺￻𑂽𛲠𛲡𛲢𛲣𝅳𝅴𝅵𝅶𝅷𝅸𝅹𝅺󠀁󠀠󠀡󠀢󠀣󠀤󠀥󠀦󠀧󠀨󠀩󠀪󠀫󠀬󠀭󠀮󠀯󠀰󠀱󠀲󠀳󠀴󠀵󠀶󠀷󠀸󠀹󠀺󠀻󠀼󠀽󠀾󠀿󠁀󠁁󠁂󠁃󠁄󠁅󠁆󠁇󠁈󠁉󠁊󠁋󠁌󠁍󠁎󠁏󠁐󠁑󠁒󠁓󠁔󠁕󠁖󠁗󠁘󠁙󠁚󠁛󠁜󠁝󠁞󠁟󠁠󠁡󠁢󠁣󠁤󠁥󠁦󠁧󠁨󠁩󠁪󠁫󠁬󠁭󠁮󠁯󠁰󠁱󠁲󠁳󠁴󠁵󠁶󠁷󠁸󠁹󠁺󠁻󠁼󠁽󠁾󠁿', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"­؀؁؂؃؄؅؜۝܏᠎​‌‍‎‏‪‫‬‭‮⁠⁡⁢⁣⁤⁦⁧⁨⁩⁪⁫⁬⁭⁮⁯﻿￹￺￻𑂽𛲠𛲡𛲢𛲣𝅳𝅴𝅵𝅶𝅷𝅸𝅹𝅺󠀁󠀠󠀡󠀢󠀣󠀤󠀥󠀦󠀧󠀨󠀩󠀪󠀫󠀬󠀭󠀮󠀯󠀰󠀱󠀲󠀳󠀴󠀵󠀶󠀷󠀸󠀹󠀺󠀻󠀼󠀽󠀾󠀿󠁀󠁁󠁂󠁃󠁄󠁅󠁆󠁇󠁈󠁉󠁊󠁋󠁌󠁍󠁎󠁏󠁐󠁑󠁒󠁓󠁔󠁕󠁖󠁗󠁘󠁙󠁚󠁛󠁜󠁝󠁞󠁟󠁠󠁡󠁢󠁣󠁤󠁥󠁦󠁧󠁨󠁩󠁪󠁫󠁬󠁭󠁮󠁯󠁰󠁱󠁲󠁳󠁴󠁵󠁶󠁷󠁸󠁹󠁺󠁻󠁼󠁽󠁾󠁿"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"­؀؁؂؃؄؅؜۝܏᠎​‌‍‎‏‪‫‬‭‮⁠⁡⁢⁣⁤⁦⁧⁨⁩⁪⁫⁬⁭⁮⁯﻿￹￺￻𑂽𛲠𛲡𛲢𛲣𝅳𝅴𝅵𝅶𝅷𝅸𝅹𝅺󠀁󠀠󠀡󠀢󠀣󠀤󠀥󠀦󠀧󠀨󠀩󠀪󠀫󠀬󠀭󠀮󠀯󠀰󠀱󠀲󠀳󠀴󠀵󠀶󠀷󠀸󠀹󠀺󠀻󠀼󠀽󠀾󠀿󠁀󠁁󠁂󠁃󠁄󠁅󠁆󠁇󠁈󠁉󠁊󠁋󠁌󠁍󠁎󠁏󠁐󠁑󠁒󠁓󠁔󠁕󠁖󠁗󠁘󠁙󠁚󠁛󠁜󠁝󠁞󠁟󠁠󠁡󠁢󠁣󠁤󠁥󠁦󠁧󠁨󠁩󠁪󠁫󠁬󠁭󠁮󠁯󠁰󠁱󠁲󠁳󠁴󠁵󠁶󠁷󠁸󠁹󠁺󠁻󠁼󠁽󠁾󠁿",
        variable:"­؀؁؂؃؄؅؜۝܏᠎​‌‍‎‏‪‫‬‭‮⁠⁡⁢⁣⁤⁦⁧⁨⁩⁪⁫⁬⁭⁮⁯﻿￹￺￻𑂽𛲠𛲡𛲢𛲣𝅳𝅴𝅵𝅶𝅷𝅸𝅹𝅺󠀁󠀠󠀡󠀢󠀣󠀤󠀥󠀦󠀧󠀨󠀩󠀪󠀫󠀬󠀭󠀮󠀯󠀰󠀱󠀲󠀳󠀴󠀵󠀶󠀷󠀸󠀹󠀺󠀻󠀼󠀽󠀾󠀿󠁀󠁁󠁂󠁃󠁄󠁅󠁆󠁇󠁈󠁉󠁊󠁋󠁌󠁍󠁎󠁏󠁐󠁑󠁒󠁓󠁔󠁕󠁖󠁗󠁘󠁙󠁚󠁛󠁜󠁝󠁞󠁟󠁠󠁡󠁢󠁣󠁤󠁥󠁦󠁧󠁨󠁩󠁪󠁫󠁬󠁭󠁮󠁯󠁰󠁱󠁲󠁳󠁴󠁵󠁶󠁷󠁸󠁹󠁺󠁻󠁼󠁽󠁾󠁿",
        concatenated:"­؀؁؂؃؄؅؜۝܏᠎​‌‍‎‏‪‫‬‭‮⁠⁡⁢⁣⁤⁦⁧⁨⁩⁪⁫⁬⁭⁮⁯﻿￹￺￻𑂽𛲠𛲡𛲢𛲣𝅳𝅴𝅵𝅶𝅷𝅸𝅹𝅺󠀁󠀠󠀡󠀢󠀣󠀤󠀥󠀦󠀧󠀨󠀩󠀪󠀫󠀬󠀭󠀮󠀯󠀰󠀱󠀲󠀳󠀴󠀵󠀶󠀷󠀸󠀹󠀺󠀻󠀼󠀽󠀾󠀿󠁀󠁁󠁂󠁃󠁄󠁅󠁆󠁇󠁈󠁉󠁊󠁋󠁌󠁍󠁎󠁏󠁐󠁑󠁒󠁓󠁔󠁕󠁖󠁗󠁘󠁙󠁚󠁛󠁜󠁝󠁞󠁟󠁠󠁡󠁢󠁣󠁤󠁥󠁦󠁧󠁨󠁩󠁪󠁫󠁬󠁭󠁮󠁯󠁰󠁱󠁲󠁳󠁴󠁵󠁶󠁷󠁸󠁹󠁺󠁻󠁼󠁽󠁾󠁿­؀؁؂؃؄؅؜۝܏᠎​‌‍‎‏‪‫‬‭‮⁠⁡⁢⁣⁤⁦⁧⁨⁩⁪⁫⁬⁭⁮⁯﻿￹￺￻𑂽𛲠𛲡𛲢𛲣𝅳𝅴𝅵𝅶𝅷𝅸𝅹𝅺󠀁󠀠󠀡󠀢󠀣󠀤󠀥󠀦󠀧󠀨󠀩󠀪󠀫󠀬󠀭󠀮󠀯󠀰󠀱󠀲󠀳󠀴󠀵󠀶󠀷󠀸󠀹󠀺󠀻󠀼󠀽󠀾󠀿󠁀󠁁󠁂󠁃󠁄󠁅󠁆󠁇󠁈󠁉󠁊󠁋󠁌󠁍󠁎󠁏󠁐󠁑󠁒󠁓󠁔󠁕󠁖󠁗󠁘󠁙󠁚󠁛󠁜󠁝󠁞󠁟󠁠󠁡󠁢󠁣󠁤󠁥󠁦󠁧󠁨󠁩󠁪󠁫󠁬󠁭󠁮󠁯󠁰󠁱󠁲󠁳󠁴󠁵󠁶󠁷󠁸󠁹󠁺󠁻󠁼󠁽󠁾󠁿"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\ufffe\"}",
    statement:"{ `literal`: '￾', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"￾"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"￾",
        variable:"￾",
        concatenated:"￾￾"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u03a9\\u2248\\xe7\\u221a\\u222b\\u02dc\\xb5\\u2264\\u2265\\xf7\"}",
    statement:"{ `literal`: 'Ω≈ç√∫˜µ≤≥÷', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Ω≈ç√∫˜µ≤≥÷"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Ω≈ç√∫˜µ≤≥÷",
        variable:"Ω≈ç√∫˜µ≤≥÷",
        concatenated:"Ω≈ç√∫˜µ≤≥÷Ω≈ç√∫˜µ≤≥÷"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\xe5\\xdf\\u2202\\u0192\\xa9\\u02d9\\u2206\\u02da\\xac\\u2026\\xe6\"}",
    statement:"{ `literal`: 'åß∂ƒ©˙∆˚¬…æ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"åß∂ƒ©˙∆˚¬…æ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"åß∂ƒ©˙∆˚¬…æ",
        variable:"åß∂ƒ©˙∆˚¬…æ",
        concatenated:"åß∂ƒ©˙∆˚¬…æåß∂ƒ©˙∆˚¬…æ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0153\\u2211\\xb4\\xae\\u2020\\xa5\\xa8\\u02c6\\xf8\\u03c0\\u201c\\u2018\"}",
    statement:"{ `literal`: 'œ∑´®†¥¨ˆøπ“‘', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"œ∑´®†¥¨ˆøπ“‘"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"œ∑´®†¥¨ˆøπ“‘",
        variable:"œ∑´®†¥¨ˆøπ“‘",
        concatenated:"œ∑´®†¥¨ˆøπ“‘œ∑´®†¥¨ˆøπ“‘"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\xa1\\u2122\\xa3\\xa2\\u221e\\xa7\\xb6\\u2022\\xaa\\xba\\u2013\\u2260\"}",
    statement:"{ `literal`: '¡™£¢∞§¶•ªº–≠', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"¡™£¢∞§¶•ªº–≠"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"¡™£¢∞§¶•ªº–≠",
        variable:"¡™£¢∞§¶•ªº–≠",
        concatenated:"¡™£¢∞§¶•ªº–≠¡™£¢∞§¶•ªº–≠"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\xb8\\u02db\\xc7\\u25ca\\u0131\\u02dc\\xc2\\xaf\\u02d8\\xbf\"}",
    statement:"{ `literal`: '¸˛Ç◊ı˜Â¯˘¿', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"¸˛Ç◊ı˜Â¯˘¿"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"¸˛Ç◊ı˜Â¯˘¿",
        variable:"¸˛Ç◊ı˜Â¯˘¿",
        concatenated:"¸˛Ç◊ı˜Â¯˘¿¸˛Ç◊ı˜Â¯˘¿"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\xc5\\xcd\\xce\\xcf\\u02dd\\xd3\\xd4\\uf8ff\\xd2\\xda\\xc6\\u2603\"}",
    statement:"{ `literal`: 'ÅÍÎÏ˝ÓÔÒÚÆ☃', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ÅÍÎÏ˝ÓÔÒÚÆ☃"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ÅÍÎÏ˝ÓÔÒÚÆ☃",
        variable:"ÅÍÎÏ˝ÓÔÒÚÆ☃",
        concatenated:"ÅÍÎÏ˝ÓÔÒÚÆ☃ÅÍÎÏ˝ÓÔÒÚÆ☃"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0152\\u201e\\xb4\\u2030\\u02c7\\xc1\\xa8\\u02c6\\xd8\\u220f\\u201d\\u2019\"}",
    statement:"{ `literal`: 'Œ„´‰ˇÁ¨ˆØ∏”’', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Œ„´‰ˇÁ¨ˆØ∏”’"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Œ„´‰ˇÁ¨ˆØ∏”’",
        variable:"Œ„´‰ˇÁ¨ˆØ∏”’",
        concatenated:"Œ„´‰ˇÁ¨ˆØ∏”’Œ„´‰ˇÁ¨ˆØ∏”’"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"`\\u2044\\u20ac\\u2039\\u203a\\ufb01\\ufb02\\u2021\\xb0\\xb7\\u201a\\u2014\\xb1\"}",
    statement:"{ `literal`: '`⁄€‹›ﬁﬂ‡°·‚—±', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"`⁄€‹›ﬁﬂ‡°·‚—±"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"`⁄€‹›ﬁﬂ‡°·‚—±",
        variable:"`⁄€‹›ﬁﬂ‡°·‚—±",
        concatenated:"`⁄€‹›ﬁﬂ‡°·‚—±`⁄€‹›ﬁﬂ‡°·‚—±"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u215b\\u215c\\u215d\\u215e\"}",
    statement:"{ `literal`: '⅛⅜⅝⅞', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"⅛⅜⅝⅞"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"⅛⅜⅝⅞",
        variable:"⅛⅜⅝⅞",
        concatenated:"⅛⅜⅝⅞⅛⅜⅝⅞"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0401\\u0402\\u0403\\u0404\\u0405\\u0406\\u0407\\u0408\\u0409\\u040a\\u040b\\u040c\\u040d\\u040e\\u040f\\u0410\\u0411\\u0412\\u0413\\u0414\\u0415\\u0416\\u0417\\u0418\\u0419\\u041a\\u041b\\u041c\\u041d\\u041e\\u041f\\u0420\\u0421\\u0422\\u0423\\u0424\\u0425\\u0426\\u0427\\u0428\\u0429\\u042a\\u042b\\u042c\\u042d\\u042e\\u042f\\u0430\\u0431\\u0432\\u0433\\u0434\\u0435\\u0436\\u0437\\u0438\\u0439\\u043a\\u043b\\u043c\\u043d\\u043e\\u043f\\u0440\\u0441\\u0442\\u0443\\u0444\\u0445\\u0446\\u0447\\u0448\\u0449\\u044a\\u044b\\u044c\\u044d\\u044e\\u044f\"}",
    statement:"{ `literal`: 'ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя",
        variable:"ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя",
        concatenated:"ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669\"}",
    statement:"{ `literal`: '٠١٢٣٤٥٦٧٨٩', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"٠١٢٣٤٥٦٧٨٩"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"٠١٢٣٤٥٦٧٨٩",
        variable:"٠١٢٣٤٥٦٧٨٩",
        concatenated:"٠١٢٣٤٥٦٧٨٩٠١٢٣٤٥٦٧٨٩"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2070\\u2074\\u2075\"}",
    statement:"{ `literal`: '⁰⁴⁵', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"⁰⁴⁵"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"⁰⁴⁵",
        variable:"⁰⁴⁵",
        concatenated:"⁰⁴⁵⁰⁴⁵"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2080\\u2081\\u2082\"}",
    statement:"{ `literal`: '₀₁₂', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"₀₁₂"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"₀₁₂",
        variable:"₀₁₂",
        concatenated:"₀₁₂₀₁₂"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2070\\u2074\\u2075\\u2080\\u2081\\u2082\"}",
    statement:"{ `literal`: '⁰⁴⁵₀₁₂', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"⁰⁴⁵₀₁₂"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"⁰⁴⁵₀₁₂",
        variable:"⁰⁴⁵₀₁₂",
        concatenated:"⁰⁴⁵₀₁₂⁰⁴⁵₀₁₂"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0e14\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47 \\u0e14\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47 \\u0e14\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\\u0e47\\u0e49\\u0e49\\u0e49\\u0e49\\u0e49\\u0e47\\u0e47\\u0e47\\u0e47\"}",
    statement:"{ `literal`: 'ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็",
        variable:"ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็",
        concatenated:"ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็ ด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\"\"}",
    statement:"{ `literal`: '\"', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\""
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\"",
        variable:"\"",
        concatenated:"\"\""
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\"\\\"\"}",
    statement:"{ `literal`: '\"\"', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\"\""
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\"\"",
        variable:"\"\"",
        concatenated:"\"\"\"\""
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<foo val=\\u201cbar\\u201d />\"}",
    statement:"{ `literal`: '<foo val=“bar” />', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<foo val=“bar” />"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<foo val=“bar” />",
        variable:"<foo val=“bar” />",
        concatenated:"<foo val=“bar” /><foo val=“bar” />"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<foo val=\\u201dbar\\u201c />\"}",
    statement:"{ `literal`: '<foo val=”bar“ />', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<foo val=”bar“ />"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<foo val=”bar“ />",
        variable:"<foo val=”bar“ />",
        concatenated:"<foo val=”bar“ /><foo val=”bar“ />"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u7530\\u4e2d\\u3055\\u3093\\u306b\\u3042\\u3052\\u3066\\u4e0b\\u3055\\u3044\"}",
    statement:"{ `literal`: '田中さんにあげて下さい', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"田中さんにあげて下さい"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"田中さんにあげて下さい",
        variable:"田中さんにあげて下さい",
        concatenated:"田中さんにあげて下さい田中さんにあげて下さい"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u30d1\\u30fc\\u30c6\\u30a3\\u30fc\\u3078\\u884c\\u304b\\u306a\\u3044\\u304b\"}",
    statement:"{ `literal`: 'パーティーへ行かないか', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"パーティーへ行かないか"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"パーティーへ行かないか",
        variable:"パーティーへ行かないか",
        concatenated:"パーティーへ行かないかパーティーへ行かないか"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u548c\\u88fd\\u6f22\\u8a9e\"}",
    statement:"{ `literal`: '和製漢語', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"和製漢語"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"和製漢語",
        variable:"和製漢語",
        concatenated:"和製漢語和製漢語"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u90e8\\u843d\\u683c\"}",
    statement:"{ `literal`: '部落格', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"部落格"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"部落格",
        variable:"部落格",
        concatenated:"部落格部落格"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uc0ac\\ud68c\\uacfc\\ud559\\uc6d0 \\uc5b4\\ud559\\uc5f0\\uad6c\\uc18c\"}",
    statement:"{ `literal`: '사회과학원 어학연구소', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"사회과학원 어학연구소"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"사회과학원 어학연구소",
        variable:"사회과학원 어학연구소",
        concatenated:"사회과학원 어학연구소사회과학원 어학연구소"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\ucc26\\ucc28\\ub97c \\ud0c0\\uace0 \\uc628 \\ud3b2\\uc2dc\\ub9e8\\uacfc \\uc45b\\ub2e4\\ub9ac \\ub620\\ubc29\\uac01\\ud558\"}",
    statement:"{ `literal`: '찦차를 타고 온 펲시맨과 쑛다리 똠방각하', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"찦차를 타고 온 펲시맨과 쑛다리 똠방각하"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"찦차를 타고 온 펲시맨과 쑛다리 똠방각하",
        variable:"찦차를 타고 온 펲시맨과 쑛다리 똠방각하",
        concatenated:"찦차를 타고 온 펲시맨과 쑛다리 똠방각하찦차를 타고 온 펲시맨과 쑛다리 똠방각하"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u793e\\u6703\\u79d1\\u5b78\\u9662\\u8a9e\\u5b78\\u7814\\u7a76\\u6240\"}",
    statement:"{ `literal`: '社會科學院語學研究所', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"社會科學院語學研究所"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"社會科學院語學研究所",
        variable:"社會科學院語學研究所",
        concatenated:"社會科學院語學研究所社會科學院語學研究所"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uc6b8\\ub780\\ubc14\\ud1a0\\ub974\"}",
    statement:"{ `literal`: '울란바토르', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"울란바토르"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"울란바토르",
        variable:"울란바토르",
        concatenated:"울란바토르울란바토르"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0002070e\\U00020731\\U00020779\\U00020c53\\U00020c78\\U00020c96\\U00020ccf\"}",
    statement:"{ `literal`: '𠜎𠜱𠝹𠱓𠱸𠲖𠳏', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𠜎𠜱𠝹𠱓𠱸𠲖𠳏"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𠜎𠜱𠝹𠱓𠱸𠲖𠳏",
        variable:"𠜎𠜱𠝹𠱓𠱸𠲖𠳏",
        concatenated:"𠜎𠜱𠝹𠱓𠱸𠲖𠳏𠜎𠜱𠝹𠱓𠱸𠲖𠳏"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u023a\"}",
    statement:"{ `literal`: 'Ⱥ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Ⱥ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Ⱥ",
        variable:"Ⱥ",
        concatenated:"ȺȺ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u023e\"}",
    statement:"{ `literal`: 'Ⱦ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Ⱦ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Ⱦ",
        variable:"Ⱦ",
        concatenated:"ȾȾ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u30fd\\u0f3c\\u0e88\\u0644\\u035c\\u0e88\\u0f3d\\uff89 \\u30fd\\u0f3c\\u0e88\\u0644\\u035c\\u0e88\\u0f3d\\uff89 \"}",
    statement:"{ `literal`: 'ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ "
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ ",
        variable:"ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ ",
        concatenated:"ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ ヽ༼ຈل͜ຈ༽ﾉ "
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"(\\uff61\\u25d5 \\u2200 \\u25d5\\uff61)\"}",
    statement:"{ `literal`: '(｡◕ ∀ ◕｡)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"(｡◕ ∀ ◕｡)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"(｡◕ ∀ ◕｡)",
        variable:"(｡◕ ∀ ◕｡)",
        concatenated:"(｡◕ ∀ ◕｡)(｡◕ ∀ ◕｡)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uff40\\uff68(\\xb4\\u2200\\uff40\\u2229\"}",
    statement:"{ `literal`: '｀ｨ(´∀｀∩', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"｀ｨ(´∀｀∩"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"｀ｨ(´∀｀∩",
        variable:"｀ｨ(´∀｀∩",
        concatenated:"｀ｨ(´∀｀∩｀ｨ(´∀｀∩"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"__\\uff9b(,_,*)\"}",
    statement:"{ `literal`: '__ﾛ(,_,*)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"__ﾛ(,_,*)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"__ﾛ(,_,*)",
        variable:"__ﾛ(,_,*)",
        concatenated:"__ﾛ(,_,*)__ﾛ(,_,*)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u30fb(\\uffe3\\u2200\\uffe3)\\u30fb:*:\"}",
    statement:"{ `literal`: '・(￣∀￣)・:*:', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"・(￣∀￣)・:*:"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"・(￣∀￣)・:*:",
        variable:"・(￣∀￣)・:*:",
        concatenated:"・(￣∀￣)・:*:・(￣∀￣)・:*:"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uff9f\\uff65\\u273f\\u30fe\\u2572(\\uff61\\u25d5\\u203f\\u25d5\\uff61)\\u2571\\u273f\\uff65\\uff9f\"}",
    statement:"{ `literal`: 'ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ",
        variable:"ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ",
        concatenated:"ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\",\\u3002\\u30fb:*:\\u30fb\\u309c\\u2019( \\u263b \\u03c9 \\u263b )\\u3002\\u30fb:*:\\u30fb\\u309c\\u2019\"}",
    statement:"{ `literal`: ',。・:*:・゜’( ☻ ω ☻ )。・:*:・゜’', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:",。・:*:・゜’( ☻ ω ☻ )。・:*:・゜’"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:",。・:*:・゜’( ☻ ω ☻ )。・:*:・゜’",
        variable:",。・:*:・゜’( ☻ ω ☻ )。・:*:・゜’",
        concatenated:",。・:*:・゜’( ☻ ω ☻ )。・:*:・゜’,。・:*:・゜’( ☻ ω ☻ )。・:*:・゜’"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"(\\u256f\\xb0\\u25a1\\xb0\\uff09\\u256f\\ufe35 \\u253b\\u2501\\u253b)\"}",
    statement:"{ `literal`: '(╯°□°）╯︵ ┻━┻)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"(╯°□°）╯︵ ┻━┻)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"(╯°□°）╯︵ ┻━┻)",
        variable:"(╯°□°）╯︵ ┻━┻)",
        concatenated:"(╯°□°）╯︵ ┻━┻)(╯°□°）╯︵ ┻━┻)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"(\\uff89\\u0ca5\\u76ca\\u0ca5\\uff09\\uff89\\ufeff \\u253b\\u2501\\u253b\"}",
    statement:"{ `literal`: '(ﾉಥ益ಥ）ﾉ﻿ ┻━┻', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"(ﾉಥ益ಥ）ﾉ﻿ ┻━┻"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"(ﾉಥ益ಥ）ﾉ﻿ ┻━┻",
        variable:"(ﾉಥ益ಥ）ﾉ﻿ ┻━┻",
        concatenated:"(ﾉಥ益ಥ）ﾉ﻿ ┻━┻(ﾉಥ益ಥ）ﾉ﻿ ┻━┻"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u252c\\u2500\\u252c\\u30ce( \\xba _ \\xba\\u30ce)\"}",
    statement:"{ `literal`: '┬─┬ノ( º _ ºノ)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"┬─┬ノ( º _ ºノ)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"┬─┬ノ( º _ ºノ)",
        variable:"┬─┬ノ( º _ ºノ)",
        concatenated:"┬─┬ノ( º _ ºノ)┬─┬ノ( º _ ºノ)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"( \\u0361\\xb0 \\u035c\\u0296 \\u0361\\xb0)\"}",
    statement:"{ `literal`: '( ͡° ͜ʖ ͡°)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"( ͡° ͜ʖ ͡°)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"( ͡° ͜ʖ ͡°)",
        variable:"( ͡° ͜ʖ ͡°)",
        concatenated:"( ͡° ͜ʖ ͡°)( ͡° ͜ʖ ͡°)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f60d\"}",
    statement:"{ `literal`: '😍', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"😍"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"😍",
        variable:"😍",
        concatenated:"😍😍"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f469\\U0001f3fd\"}",
    statement:"{ `literal`: '👩🏽', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"👩🏽"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"👩🏽",
        variable:"👩🏽",
        concatenated:"👩🏽👩🏽"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f47e \\U0001f647 \\U0001f481 \\U0001f645 \\U0001f646 \\U0001f64b \\U0001f64e \\U0001f64d\"}",
    statement:"{ `literal`: '👾 🙇 💁 🙅 🙆 🙋 🙎 🙍', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"👾 🙇 💁 🙅 🙆 🙋 🙎 🙍"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"👾 🙇 💁 🙅 🙆 🙋 🙎 🙍",
        variable:"👾 🙇 💁 🙅 🙆 🙋 🙎 🙍",
        concatenated:"👾 🙇 💁 🙅 🙆 🙋 🙎 🙍👾 🙇 💁 🙅 🙆 🙋 🙎 🙍"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f435 \\U0001f648 \\U0001f649 \\U0001f64a\"}",
    statement:"{ `literal`: '🐵 🙈 🙉 🙊', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"🐵 🙈 🙉 🙊"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"🐵 🙈 🙉 🙊",
        variable:"🐵 🙈 🙉 🙊",
        concatenated:"🐵 🙈 🙉 🙊🐵 🙈 🙉 🙊"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2764\\ufe0f \\U0001f494 \\U0001f48c \\U0001f495 \\U0001f49e \\U0001f493 \\U0001f497 \\U0001f496 \\U0001f498 \\U0001f49d \\U0001f49f \\U0001f49c \\U0001f49b \\U0001f49a \\U0001f499\"}",
    statement:"{ `literal`: '❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙",
        variable:"❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙",
        concatenated:"❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u270b\\U0001f3ff \\U0001f4aa\\U0001f3ff \\U0001f450\\U0001f3ff \\U0001f64c\\U0001f3ff \\U0001f44f\\U0001f3ff \\U0001f64f\\U0001f3ff\"}",
    statement:"{ `literal`: '✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿",
        variable:"✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿",
        concatenated:"✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f6be \\U0001f192 \\U0001f193 \\U0001f195 \\U0001f196 \\U0001f197 \\U0001f199 \\U0001f3e7\"}",
    statement:"{ `literal`: '🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧",
        variable:"🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧",
        concatenated:"🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"0\\ufe0f\\u20e3 1\\ufe0f\\u20e3 2\\ufe0f\\u20e3 3\\ufe0f\\u20e3 4\\ufe0f\\u20e3 5\\ufe0f\\u20e3 6\\ufe0f\\u20e3 7\\ufe0f\\u20e3 8\\ufe0f\\u20e3 9\\ufe0f\\u20e3 \\U0001f51f\"}",
    statement:"{ `literal`: '0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟",
        variable:"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟",
        concatenated:"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f1fa\\U0001f1f8\\U0001f1f7\\U0001f1fa\\U0001f1f8 \\U0001f1e6\\U0001f1eb\\U0001f1e6\\U0001f1f2\\U0001f1f8\"}",
    statement:"{ `literal`: '🇺🇸🇷🇺🇸 🇦🇫🇦🇲🇸', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"🇺🇸🇷🇺🇸 🇦🇫🇦🇲🇸"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"🇺🇸🇷🇺🇸 🇦🇫🇦🇲🇸",
        variable:"🇺🇸🇷🇺🇸 🇦🇫🇦🇲🇸",
        concatenated:"🇺🇸🇷🇺🇸 🇦🇫🇦🇲🇸🇺🇸🇷🇺🇸 🇦🇫🇦🇲🇸"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f1fa\\U0001f1f8\\U0001f1f7\\U0001f1fa\\U0001f1f8\\U0001f1e6\\U0001f1eb\\U0001f1e6\\U0001f1f2\"}",
    statement:"{ `literal`: '🇺🇸🇷🇺🇸🇦🇫🇦🇲', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"🇺🇸🇷🇺🇸🇦🇫🇦🇲"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"🇺🇸🇷🇺🇸🇦🇫🇦🇲",
        variable:"🇺🇸🇷🇺🇸🇦🇫🇦🇲",
        concatenated:"🇺🇸🇷🇺🇸🇦🇫🇦🇲🇺🇸🇷🇺🇸🇦🇫🇦🇲"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001f1fa\\U0001f1f8\\U0001f1f7\\U0001f1fa\\U0001f1f8\\U0001f1e6\"}",
    statement:"{ `literal`: '🇺🇸🇷🇺🇸🇦', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"🇺🇸🇷🇺🇸🇦"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"🇺🇸🇷🇺🇸🇦",
        variable:"🇺🇸🇷🇺🇸🇦",
        concatenated:"🇺🇸🇷🇺🇸🇦🇺🇸🇷🇺🇸🇦"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uff11\\uff12\\uff13\"}",
    statement:"{ `literal`: '１２３', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"１２３"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"１２３",
        variable:"１２３",
        concatenated:"１２３１２３"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0661\\u0662\\u0663\"}",
    statement:"{ `literal`: '١٢٣', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"١٢٣"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"١٢٣",
        variable:"١٢٣",
        concatenated:"١٢٣١٢٣"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u062b\\u0645 \\u0646\\u0641\\u0633 \\u0633\\u0642\\u0637\\u062a \\u0648\\u0628\\u0627\\u0644\\u062a\\u062d\\u062f\\u064a\\u062f\\u060c, \\u062c\\u0632\\u064a\\u0631\\u062a\\u064a \\u0628\\u0627\\u0633\\u062a\\u062e\\u062f\\u0627\\u0645 \\u0623\\u0646 \\u062f\\u0646\\u0648. \\u0625\\u0630 \\u0647\\u0646\\u0627\\u061f \\u0627\\u0644\\u0633\\u062a\\u0627\\u0631 \\u0648\\u062a\\u0646\\u0635\\u064a\\u0628 \\u0643\\u0627\\u0646. \\u0623\\u0647\\u0651\\u0644 \\u0627\\u064a\\u0637\\u0627\\u0644\\u064a\\u0627\\u060c \\u0628\\u0631\\u064a\\u0637\\u0627\\u0646\\u064a\\u0627-\\u0641\\u0631\\u0646\\u0633\\u0627 \\u0642\\u062f \\u0623\\u062e\\u0630. \\u0633\\u0644\\u064a\\u0645\\u0627\\u0646\\u060c \\u0625\\u062a\\u0641\\u0627\\u0642\\u064a\\u0629 \\u0628\\u064a\\u0646 \\u0645\\u0627, \\u064a\\u0630\\u0643\\u0631 \\u0627\\u0644\\u062d\\u062f\\u0648\\u062f \\u0623\\u064a \\u0628\\u0639\\u062f, \\u0645\\u0639\\u0627\\u0645\\u0644\\u0629 \\u0628\\u0648\\u0644\\u0646\\u062f\\u0627\\u060c \\u0627\\u0644\\u0625\\u0637\\u0644\\u0627\\u0642 \\u0639\\u0644 \\u0625\\u064a\\u0648.\"}",
    statement:"{ `literal`: 'ثم نفس سقطت وبالتحديد،, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطاليا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو.', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ثم نفس سقطت وبالتحديد،, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطاليا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو."
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ثم نفس سقطت وبالتحديد،, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطاليا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو.",
        variable:"ثم نفس سقطت وبالتحديد،, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطاليا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو.",
        concatenated:"ثم نفس سقطت وبالتحديد،, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطاليا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو.ثم نفس سقطت وبالتحديد،, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطاليا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو."
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u05d1\\u05b0\\u05bc\\u05e8\\u05b5\\u05d0\\u05e9\\u05b4\\u05c1\\u05d9\\u05ea, \\u05d1\\u05b8\\u05bc\\u05e8\\u05b8\\u05d0 \\u05d0\\u05b1\\u05dc\\u05b9\\u05d4\\u05b4\\u05d9\\u05dd, \\u05d0\\u05b5\\u05ea \\u05d4\\u05b7\\u05e9\\u05b8\\u05bc\\u05c1\\u05de\\u05b7\\u05d9\\u05b4\\u05dd, \\u05d5\\u05b0\\u05d0\\u05b5\\u05ea \\u05d4\\u05b8\\u05d0\\u05b8\\u05e8\\u05b6\\u05e5\"}",
    statement:"{ `literal`: 'בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ",
        variable:"בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ",
        concatenated:"בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץבְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u05d4\\u05b8\\u05d9\\u05b0\\u05ea\\u05b8\\u05d4test\\u0627\\u0644\\u0635\\u0641\\u062d\\u0627\\u062a \\u0627\\u0644\\u062a\\u0651\\u062d\\u0648\\u0644\"}",
    statement:"{ `literal`: 'הָיְתָהtestالصفحات التّحول', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"הָיְתָהtestالصفحات التّحول"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"הָיְתָהtestالصفحات التّحول",
        variable:"הָיְתָהtestالصفحات التّحول",
        concatenated:"הָיְתָהtestالصفحات التّحولהָיְתָהtestالصفحات التّحول"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\ufdfd\"}",
    statement:"{ `literal`: '﷽', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"﷽"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"﷽",
        variable:"﷽",
        concatenated:"﷽﷽"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\ufdfa\"}",
    statement:"{ `literal`: 'ﷺ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ﷺ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ﷺ",
        variable:"ﷺ",
        concatenated:"ﷺﷺ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0645\\u064f\\u0646\\u064e\\u0627\\u0642\\u064e\\u0634\\u064e\\u0629\\u064f \\u0633\\u064f\\u0628\\u064f\\u0644\\u0650 \\u0627\\u0650\\u0633\\u0652\\u062a\\u0650\\u062e\\u0652\\u062f\\u064e\\u0627\\u0645\\u0650 \\u0627\\u0644\\u0644\\u064f\\u0651\\u063a\\u064e\\u0629\\u0650 \\u0641\\u0650\\u064a \\u0627\\u0644\\u0646\\u064f\\u0651\\u0638\\u064f\\u0645\\u0650 \\u0627\\u0644\\u0652\\u0642\\u064e\\u0627\\u0626\\u0650\\u0645\\u064e\\u0629\\u0650 \\u0648\\u064e\\u0641\\u0650\\u064a\\u0645 \\u064a\\u064e\\u062e\\u064f\\u0635\\u064e\\u0651 \\u0627\\u0644\\u062a\\u064e\\u0651\\u0637\\u0652\\u0628\\u0650\\u064a\\u0642\\u064e\\u0627\\u062a\\u064f \\u0627\\u0644\\u0652\\u062d\\u0627\\u0633\\u064f\\u0648\\u0628\\u0650\\u064a\\u064e\\u0651\\u0629\\u064f\\u060c \"}",
    statement:"{ `literal`: 'مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُصَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ، ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُصَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ، "
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُصَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ، ",
        variable:"مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُصَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ، ",
        concatenated:"مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُصَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ، مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُصَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ، "
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u200b\"}",
    statement:"{ `literal`: '​', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"​"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"​",
        variable:"​",
        concatenated:"​​"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u1680\"}",
    statement:"{ `literal`: ' ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:" "
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:" ",
        variable:" ",
        concatenated:"  "
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u180e\"}",
    statement:"{ `literal`: '᠎', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"᠎"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"᠎",
        variable:"᠎",
        concatenated:"᠎᠎"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u3000\"}",
    statement:"{ `literal`: '　', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"　"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"　",
        variable:"　",
        concatenated:"　　"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\ufeff\"}",
    statement:"{ `literal`: '﻿', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"﻿"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"﻿",
        variable:"﻿",
        concatenated:"﻿﻿"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2423\"}",
    statement:"{ `literal`: '␣', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"␣"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"␣",
        variable:"␣",
        concatenated:"␣␣"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2422\"}",
    statement:"{ `literal`: '␢', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"␢"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"␢",
        variable:"␢",
        concatenated:"␢␢"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2421\"}",
    statement:"{ `literal`: '␡', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"␡"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"␡",
        variable:"␡",
        concatenated:"␡␡"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u202a\\u202atest\\u202a\"}",
    statement:"{ `literal`: '‪‪test‪', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"‪‪test‪"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"‪‪test‪",
        variable:"‪‪test‪",
        concatenated:"‪‪test‪‪‪test‪"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u202btest\\u202b\"}",
    statement:"{ `literal`: '‫test‫', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"‫test‫"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"‫test‫",
        variable:"‫test‫",
        concatenated:"‫test‫‫test‫"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2029test\\u2029\"}",
    statement:"{ `literal`: ' test ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:" test "
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:" test ",
        variable:" test ",
        concatenated:" test  test "
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"test\\u2060test\\u202b\"}",
    statement:"{ `literal`: 'test⁠test‫', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"test⁠test‫"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"test⁠test‫",
        variable:"test⁠test‫",
        concatenated:"test⁠test‫test⁠test‫"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u2066test\\u2067\"}",
    statement:"{ `literal`: '⁦test⁧', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"⁦test⁧"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"⁦test⁧",
        variable:"⁦test⁧",
        concatenated:"⁦test⁧⁦test⁧"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u1e70\\u033a\\u033a\\u0315o\\u035e \\u0337i\\u0332\\u032c\\u0347\\u032a\\u0359n\\u031d\\u0317\\u0355v\\u031f\\u031c\\u0318\\u0326\\u035fo\\u0336\\u0319\\u0330\\u0320k\\xe8\\u035a\\u032e\\u033a\\u032a\\u0339\\u0331\\u0324 \\u0316t\\u031d\\u0355\\u0333\\u0323\\u033b\\u032a\\u035eh\\u033c\\u0353\\u0332\\u0326\\u0333\\u0318\\u0332e\\u0347\\u0323\\u0330\\u0326\\u032c\\u034e \\u0322\\u033c\\u033b\\u0331\\u0318h\\u035a\\u034e\\u0359\\u031c\\u0323\\u0332\\u0345i\\u0326\\u0332\\u0323\\u0330\\u0324v\\u033b\\u034de\\u033a\\u032d\\u0333\\u032a\\u0330-m\\u0322i\\u0345n\\u0316\\u033a\\u031e\\u0332\\u032f\\u0330d\\u0335\\u033c\\u031f\\u0359\\u0329\\u033c\\u0318\\u0333 \\u031e\\u0325\\u0331\\u0333\\u032dr\\u031b\\u0317\\u0318e\\u0359p\\u0360r\\u033c\\u031e\\u033b\\u032d\\u0317e\\u033a\\u0320\\u0323\\u035fs\\u0318\\u0347\\u0333\\u034d\\u031d\\u0349e\\u0349\\u0325\\u032f\\u031e\\u0332\\u035a\\u032c\\u035c\\u01f9\\u032c\\u034e\\u034e\\u031f\\u0316\\u0347\\u0324t\\u034d\\u032c\\u0324\\u0353\\u033c\\u032d\\u0358\\u0345i\\u032a\\u0331n\\u0360g\\u0334\\u0349 \\u034f\\u0349\\u0345c\\u032c\\u031fh\\u0361a\\u032b\\u033b\\u032f\\u0358o\\u032b\\u031f\\u0316\\u034d\\u0319\\u031d\\u0349s\\u0317\\u0326\\u0332.\\u0328\\u0339\\u0348\\u0323\"}",
    statement:"{ `literal`: 'Ṱ̺̺̕o͞ ̷i̲̬͇̪͙n̝̗͕v̟̜̘̦͟o̶̙̰̠kè͚̮̺̪̹̱̤ ̖t̝͕̳̣̻̪͞h̼͓̲̦̳̘̲e͇̣̰̦̬͎ ̢̼̻̱̘h͚͎͙̜̣̲ͅi̦̲̣̰̤v̻͍e̺̭̳̪̰-m̢iͅn̖̺̞̲̯̰d̵̼̟͙̩̼̘̳ ̞̥̱̳̭r̛̗̘e͙p͠r̼̞̻̭̗e̺̠̣͟s̘͇̳͍̝͉e͉̥̯̞̲͚̬͜ǹ̬͎͎̟̖͇̤t͍̬̤͓̼̭͘ͅi̪̱n͠g̴͉ ͏͉ͅc̬̟h͡a̫̻̯͘o̫̟̖͍̙̝͉s̗̦̲.̨̹͈̣', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Ṱ̺̺̕o͞ ̷i̲̬͇̪͙n̝̗͕v̟̜̘̦͟o̶̙̰̠kè͚̮̺̪̹̱̤ ̖t̝͕̳̣̻̪͞h̼͓̲̦̳̘̲e͇̣̰̦̬͎ ̢̼̻̱̘h͚͎͙̜̣̲ͅi̦̲̣̰̤v̻͍e̺̭̳̪̰-m̢iͅn̖̺̞̲̯̰d̵̼̟͙̩̼̘̳ ̞̥̱̳̭r̛̗̘e͙p͠r̼̞̻̭̗e̺̠̣͟s̘͇̳͍̝͉e͉̥̯̞̲͚̬͜ǹ̬͎͎̟̖͇̤t͍̬̤͓̼̭͘ͅi̪̱n͠g̴͉ ͏͉ͅc̬̟h͡a̫̻̯͘o̫̟̖͍̙̝͉s̗̦̲.̨̹͈̣"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Ṱ̺̺̕o͞ ̷i̲̬͇̪͙n̝̗͕v̟̜̘̦͟o̶̙̰̠kè͚̮̺̪̹̱̤ ̖t̝͕̳̣̻̪͞h̼͓̲̦̳̘̲e͇̣̰̦̬͎ ̢̼̻̱̘h͚͎͙̜̣̲ͅi̦̲̣̰̤v̻͍e̺̭̳̪̰-m̢iͅn̖̺̞̲̯̰d̵̼̟͙̩̼̘̳ ̞̥̱̳̭r̛̗̘e͙p͠r̼̞̻̭̗e̺̠̣͟s̘͇̳͍̝͉e͉̥̯̞̲͚̬͜ǹ̬͎͎̟̖͇̤t͍̬̤͓̼̭͘ͅi̪̱n͠g̴͉ ͏͉ͅc̬̟h͡a̫̻̯͘o̫̟̖͍̙̝͉s̗̦̲.̨̹͈̣",
        variable:"Ṱ̺̺̕o͞ ̷i̲̬͇̪͙n̝̗͕v̟̜̘̦͟o̶̙̰̠kè͚̮̺̪̹̱̤ ̖t̝͕̳̣̻̪͞h̼͓̲̦̳̘̲e͇̣̰̦̬͎ ̢̼̻̱̘h͚͎͙̜̣̲ͅi̦̲̣̰̤v̻͍e̺̭̳̪̰-m̢iͅn̖̺̞̲̯̰d̵̼̟͙̩̼̘̳ ̞̥̱̳̭r̛̗̘e͙p͠r̼̞̻̭̗e̺̠̣͟s̘͇̳͍̝͉e͉̥̯̞̲͚̬͜ǹ̬͎͎̟̖͇̤t͍̬̤͓̼̭͘ͅi̪̱n͠g̴͉ ͏͉ͅc̬̟h͡a̫̻̯͘o̫̟̖͍̙̝͉s̗̦̲.̨̹͈̣",
        concatenated:"Ṱ̺̺̕o͞ ̷i̲̬͇̪͙n̝̗͕v̟̜̘̦͟o̶̙̰̠kè͚̮̺̪̹̱̤ ̖t̝͕̳̣̻̪͞h̼͓̲̦̳̘̲e͇̣̰̦̬͎ ̢̼̻̱̘h͚͎͙̜̣̲ͅi̦̲̣̰̤v̻͍e̺̭̳̪̰-m̢iͅn̖̺̞̲̯̰d̵̼̟͙̩̼̘̳ ̞̥̱̳̭r̛̗̘e͙p͠r̼̞̻̭̗e̺̠̣͟s̘͇̳͍̝͉e͉̥̯̞̲͚̬͜ǹ̬͎͎̟̖͇̤t͍̬̤͓̼̭͘ͅi̪̱n͠g̴͉ ͏͉ͅc̬̟h͡a̫̻̯͘o̫̟̖͍̙̝͉s̗̦̲.̨̹͈̣Ṱ̺̺̕o͞ ̷i̲̬͇̪͙n̝̗͕v̟̜̘̦͟o̶̙̰̠kè͚̮̺̪̹̱̤ ̖t̝͕̳̣̻̪͞h̼͓̲̦̳̘̲e͇̣̰̦̬͎ ̢̼̻̱̘h͚͎͙̜̣̲ͅi̦̲̣̰̤v̻͍e̺̭̳̪̰-m̢iͅn̖̺̞̲̯̰d̵̼̟͙̩̼̘̳ ̞̥̱̳̭r̛̗̘e͙p͠r̼̞̻̭̗e̺̠̣͟s̘͇̳͍̝͉e͉̥̯̞̲͚̬͜ǹ̬͎͎̟̖͇̤t͍̬̤͓̼̭͘ͅi̪̱n͠g̴͉ ͏͉ͅc̬̟h͡a̫̻̯͘o̫̟̖͍̙̝͉s̗̦̲.̨̹͈̣"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0321\\u0353\\u031e\\u0345I\\u0317\\u0318\\u0326\\u035dn\\u0347\\u0347\\u0359v\\u032e\\u032bok\\u0332\\u032b\\u0319\\u0348i\\u0316\\u0359\\u032d\\u0339\\u0320\\u031en\\u0321\\u033b\\u032e\\u0323\\u033ag\\u0332\\u0348\\u0359\\u032d\\u0359\\u032c\\u034e \\u0330t\\u0354\\u0326h\\u031e\\u0332e\\u0322\\u0324 \\u034d\\u032c\\u0332\\u0356f\\u0334\\u0318\\u0355\\u0323\\xe8\\u0356\\u1eb9\\u0325\\u0329l\\u0356\\u0354\\u035ai\\u0353\\u035a\\u0326\\u0360n\\u0356\\u034d\\u0317\\u0353\\u0333\\u032eg\\u034d \\u0328o\\u035a\\u032a\\u0361f\\u0318\\u0323\\u032c \\u0316\\u0318\\u0356\\u031f\\u0359\\u032ec\\u0489\\u0354\\u032b\\u0356\\u0353\\u0347\\u0356\\u0345h\\u0335\\u0324\\u0323\\u035a\\u0354\\xe1\\u0317\\u033c\\u0355\\u0345o\\u033c\\u0323\\u0325s\\u0331\\u0348\\u033a\\u0316\\u0326\\u033b\\u0362.\\u031b\\u0316\\u031e\\u0320\\u032b\\u0330\"}",
    statement:"{ `literal`: '̡͓̞ͅI̗̘̦͝n͇͇͙v̮̫ok̲̫̙͈i̖͙̭̹̠̞n̡̻̮̣̺g̲͈͙̭͙̬͎ ̰t͔̦h̞̲e̢̤ ͍̬̲͖f̴̘͕̣è͖ẹ̥̩l͖͔͚i͓͚̦͠n͖͍̗͓̳̮g͍ ̨o͚̪͡f̘̣̬ ̖̘͖̟͙̮c҉͔̫͖͓͇͖ͅh̵̤̣͚͔á̗̼͕ͅo̼̣̥s̱͈̺̖̦̻͢.̛̖̞̠̫̰', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"̡͓̞ͅI̗̘̦͝n͇͇͙v̮̫ok̲̫̙͈i̖͙̭̹̠̞n̡̻̮̣̺g̲͈͙̭͙̬͎ ̰t͔̦h̞̲e̢̤ ͍̬̲͖f̴̘͕̣è͖ẹ̥̩l͖͔͚i͓͚̦͠n͖͍̗͓̳̮g͍ ̨o͚̪͡f̘̣̬ ̖̘͖̟͙̮c҉͔̫͖͓͇͖ͅh̵̤̣͚͔á̗̼͕ͅo̼̣̥s̱͈̺̖̦̻͢.̛̖̞̠̫̰"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"̡͓̞ͅI̗̘̦͝n͇͇͙v̮̫ok̲̫̙͈i̖͙̭̹̠̞n̡̻̮̣̺g̲͈͙̭͙̬͎ ̰t͔̦h̞̲e̢̤ ͍̬̲͖f̴̘͕̣è͖ẹ̥̩l͖͔͚i͓͚̦͠n͖͍̗͓̳̮g͍ ̨o͚̪͡f̘̣̬ ̖̘͖̟͙̮c҉͔̫͖͓͇͖ͅh̵̤̣͚͔á̗̼͕ͅo̼̣̥s̱͈̺̖̦̻͢.̛̖̞̠̫̰",
        variable:"̡͓̞ͅI̗̘̦͝n͇͇͙v̮̫ok̲̫̙͈i̖͙̭̹̠̞n̡̻̮̣̺g̲͈͙̭͙̬͎ ̰t͔̦h̞̲e̢̤ ͍̬̲͖f̴̘͕̣è͖ẹ̥̩l͖͔͚i͓͚̦͠n͖͍̗͓̳̮g͍ ̨o͚̪͡f̘̣̬ ̖̘͖̟͙̮c҉͔̫͖͓͇͖ͅh̵̤̣͚͔á̗̼͕ͅo̼̣̥s̱͈̺̖̦̻͢.̛̖̞̠̫̰",
        concatenated:"̡͓̞ͅI̗̘̦͝n͇͇͙v̮̫ok̲̫̙͈i̖͙̭̹̠̞n̡̻̮̣̺g̲͈͙̭͙̬͎ ̰t͔̦h̞̲e̢̤ ͍̬̲͖f̴̘͕̣è͖ẹ̥̩l͖͔͚i͓͚̦͠n͖͍̗͓̳̮g͍ ̨o͚̪͡f̘̣̬ ̖̘͖̟͙̮c҉͔̫͖͓͇͖ͅh̵̤̣͚͔á̗̼͕ͅo̼̣̥s̱͈̺̖̦̻͢.̡̛̖̞̠̫̰͓̞ͅI̗̘̦͝n͇͇͙v̮̫ok̲̫̙͈i̖͙̭̹̠̞n̡̻̮̣̺g̲͈͙̭͙̬͎ ̰t͔̦h̞̲e̢̤ ͍̬̲͖f̴̘͕̣è͖ẹ̥̩l͖͔͚i͓͚̦͠n͖͍̗͓̳̮g͍ ̨o͚̪͡f̘̣̬ ̖̘͖̟͙̮c҉͔̫͖͓͇͖ͅh̵̤̣͚͔á̗̼͕ͅo̼̣̥s̱͈̺̖̦̻͢.̛̖̞̠̫̰"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0317\\u033a\\u0356\\u0339\\u032f\\u0353\\u1e6e\\u0324\\u034d\\u0325\\u0347\\u0348h\\u0332\\u0301e\\u034f\\u0353\\u033c\\u0317\\u0319\\u033c\\u0323\\u0354 \\u0347\\u031c\\u0331\\u0320\\u0353\\u034d\\u0345N\\u0355\\u0360e\\u0317\\u0331z\\u0318\\u031d\\u031c\\u033a\\u0359p\\u0324\\u033a\\u0339\\u034d\\u032f\\u035ae\\u0320\\u033b\\u0320\\u035cr\\u0328\\u0324\\u034d\\u033a\\u0316\\u0354\\u0316\\u0316d\\u0320\\u031f\\u032d\\u032c\\u031d\\u035fi\\u0326\\u0356\\u0329\\u0353\\u0354\\u0324a\\u0320\\u0317\\u032c\\u0349\\u0319n\\u035a\\u035c \\u033b\\u031e\\u0330\\u035a\\u0345h\\u0335\\u0349i\\u0333\\u031ev\\u0322\\u0347\\u1e19\\u034e\\u035f-\\u0489\\u032d\\u0329\\u033c\\u0354m\\u0324\\u032d\\u032bi\\u0355\\u0347\\u031d\\u0326n\\u0317\\u0359\\u1e0d\\u031f \\u032f\\u0332\\u0355\\u035e\\u01eb\\u031f\\u032f\\u0330\\u0332\\u0359\\u033b\\u031df \\u032a\\u0330\\u0330\\u0317\\u0316\\u032d\\u0318\\u0358c\\u0326\\u034d\\u0332\\u031e\\u034d\\u0329\\u0319\\u1e25\\u035aa\\u032e\\u034e\\u031f\\u0319\\u035c\\u01a1\\u0329\\u0339\\u034es\\u0324.\\u031d\\u031d \\u0489Z\\u0321\\u0316\\u031c\\u0356\\u0330\\u0323\\u0349\\u031ca\\u0356\\u0330\\u0359\\u032c\\u0361l\\u0332\\u032b\\u0333\\u034d\\u0329g\\u0321\\u031f\\u033c\\u0331\\u035a\\u031e\\u032c\\u0345o\\u0317\\u035c.\\u031f\"}",
    statement:"{ `literal`: '̗̺͖̹̯͓Ṯ̤͍̥͇͈h̲́e͏͓̼̗̙̼̣͔ ͇̜̱̠͓͍ͅN͕͠e̗̱z̘̝̜̺͙p̤̺̹͍̯͚e̠̻̠͜r̨̤͍̺̖͔̖̖d̠̟̭̬̝͟i̦͖̩͓͔̤a̠̗̬͉̙n͚͜ ̻̞̰͚ͅh̵͉i̳̞v̢͇ḙ͎͟-҉̭̩̼͔m̤̭̫i͕͇̝̦n̗͙ḍ̟ ̯̲͕͞ǫ̟̯̰̲͙̻̝f ̪̰̰̗̖̭̘͘c̦͍̲̞͍̩̙ḥ͚a̮͎̟̙͜ơ̩̹͎s̤.̝̝ ҉Z̡̖̜͖̰̣͉̜a͖̰͙̬͡l̲̫̳͍̩g̡̟̼̱͚̞̬ͅo̗͜.̟', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"̗̺͖̹̯͓Ṯ̤͍̥͇͈h̲́e͏͓̼̗̙̼̣͔ ͇̜̱̠͓͍ͅN͕͠e̗̱z̘̝̜̺͙p̤̺̹͍̯͚e̠̻̠͜r̨̤͍̺̖͔̖̖d̠̟̭̬̝͟i̦͖̩͓͔̤a̠̗̬͉̙n͚͜ ̻̞̰͚ͅh̵͉i̳̞v̢͇ḙ͎͟-҉̭̩̼͔m̤̭̫i͕͇̝̦n̗͙ḍ̟ ̯̲͕͞ǫ̟̯̰̲͙̻̝f ̪̰̰̗̖̭̘͘c̦͍̲̞͍̩̙ḥ͚a̮͎̟̙͜ơ̩̹͎s̤.̝̝ ҉Z̡̖̜͖̰̣͉̜a͖̰͙̬͡l̲̫̳͍̩g̡̟̼̱͚̞̬ͅo̗͜.̟"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"̗̺͖̹̯͓Ṯ̤͍̥͇͈h̲́e͏͓̼̗̙̼̣͔ ͇̜̱̠͓͍ͅN͕͠e̗̱z̘̝̜̺͙p̤̺̹͍̯͚e̠̻̠͜r̨̤͍̺̖͔̖̖d̠̟̭̬̝͟i̦͖̩͓͔̤a̠̗̬͉̙n͚͜ ̻̞̰͚ͅh̵͉i̳̞v̢͇ḙ͎͟-҉̭̩̼͔m̤̭̫i͕͇̝̦n̗͙ḍ̟ ̯̲͕͞ǫ̟̯̰̲͙̻̝f ̪̰̰̗̖̭̘͘c̦͍̲̞͍̩̙ḥ͚a̮͎̟̙͜ơ̩̹͎s̤.̝̝ ҉Z̡̖̜͖̰̣͉̜a͖̰͙̬͡l̲̫̳͍̩g̡̟̼̱͚̞̬ͅo̗͜.̟",
        variable:"̗̺͖̹̯͓Ṯ̤͍̥͇͈h̲́e͏͓̼̗̙̼̣͔ ͇̜̱̠͓͍ͅN͕͠e̗̱z̘̝̜̺͙p̤̺̹͍̯͚e̠̻̠͜r̨̤͍̺̖͔̖̖d̠̟̭̬̝͟i̦͖̩͓͔̤a̠̗̬͉̙n͚͜ ̻̞̰͚ͅh̵͉i̳̞v̢͇ḙ͎͟-҉̭̩̼͔m̤̭̫i͕͇̝̦n̗͙ḍ̟ ̯̲͕͞ǫ̟̯̰̲͙̻̝f ̪̰̰̗̖̭̘͘c̦͍̲̞͍̩̙ḥ͚a̮͎̟̙͜ơ̩̹͎s̤.̝̝ ҉Z̡̖̜͖̰̣͉̜a͖̰͙̬͡l̲̫̳͍̩g̡̟̼̱͚̞̬ͅo̗͜.̟",
        concatenated:"̗̺͖̹̯͓Ṯ̤͍̥͇͈h̲́e͏͓̼̗̙̼̣͔ ͇̜̱̠͓͍ͅN͕͠e̗̱z̘̝̜̺͙p̤̺̹͍̯͚e̠̻̠͜r̨̤͍̺̖͔̖̖d̠̟̭̬̝͟i̦͖̩͓͔̤a̠̗̬͉̙n͚͜ ̻̞̰͚ͅh̵͉i̳̞v̢͇ḙ͎͟-҉̭̩̼͔m̤̭̫i͕͇̝̦n̗͙ḍ̟ ̯̲͕͞ǫ̟̯̰̲͙̻̝f ̪̰̰̗̖̭̘͘c̦͍̲̞͍̩̙ḥ͚a̮͎̟̙͜ơ̩̹͎s̤.̝̝ ҉Z̡̖̜͖̰̣͉̜a͖̰͙̬͡l̲̫̳͍̩g̡̟̼̱͚̞̬ͅo̗͜.̟̗̺͖̹̯͓Ṯ̤͍̥͇͈h̲́e͏͓̼̗̙̼̣͔ ͇̜̱̠͓͍ͅN͕͠e̗̱z̘̝̜̺͙p̤̺̹͍̯͚e̠̻̠͜r̨̤͍̺̖͔̖̖d̠̟̭̬̝͟i̦͖̩͓͔̤a̠̗̬͉̙n͚͜ ̻̞̰͚ͅh̵͉i̳̞v̢͇ḙ͎͟-҉̭̩̼͔m̤̭̫i͕͇̝̦n̗͙ḍ̟ ̯̲͕͞ǫ̟̯̰̲͙̻̝f ̪̰̰̗̖̭̘͘c̦͍̲̞͍̩̙ḥ͚a̮͎̟̙͜ơ̩̹͎s̤.̝̝ ҉Z̡̖̜͖̰̣͉̜a͖̰͙̬͡l̲̫̳͍̩g̡̟̼̱͚̞̬ͅo̗͜.̟"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u0326H\\u032c\\u0324\\u0317\\u0324\\u035de\\u035c \\u031c\\u0325\\u031d\\u033b\\u034d\\u031f\\u0301w\\u0315h\\u0316\\u032f\\u0353o\\u031d\\u0359\\u0316\\u034e\\u0331\\u032e \\u0489\\u033a\\u0319\\u031e\\u031f\\u0348W\\u0337\\u033c\\u032da\\u033a\\u032a\\u034d\\u012f\\u0348\\u0355\\u032d\\u0359\\u032f\\u031ct\\u0336\\u033c\\u032es\\u0318\\u0359\\u0356\\u0315 \\u0320\\u032b\\u0320B\\u033b\\u034d\\u0359\\u0349\\u0333\\u0345e\\u0335h\\u0335\\u032c\\u0347\\u032b\\u0359i\\u0339\\u0353\\u0333\\u0333\\u032e\\u034e\\u032b\\u0315n\\u035fd\\u0334\\u032a\\u031c\\u0316 \\u0330\\u0349\\u0329\\u0347\\u0359\\u0332\\u035e\\u0345T\\u0356\\u033c\\u0353\\u032a\\u0362h\\u034f\\u0353\\u032e\\u033be\\u032c\\u031d\\u031f\\u0345 \\u0324\\u0339\\u031dW\\u0359\\u031e\\u031d\\u0354\\u0347\\u035d\\u0345a\\u034f\\u0353\\u0354\\u0339\\u033c\\u0323l\\u0334\\u0354\\u0330\\u0324\\u031f\\u0354\\u1e3d\\u032b.\\u0355\"}",
    statement:"{ `literal`: '̦H̬̤̗̤͝e͜ ̜̥̝̻͍̟́w̕h̖̯͓o̝͙̖͎̱̮ ҉̺̙̞̟͈W̷̼̭a̺̪͍į͈͕̭͙̯̜t̶̼̮s̘͙͖̕ ̠̫̠B̻͍͙͉̳ͅe̵h̵̬͇̫͙i̹͓̳̳̮͎̫̕n͟d̴̪̜̖ ̰͉̩͇͙̲͞ͅT͖̼͓̪͢h͏͓̮̻e̬̝̟ͅ ̤̹̝W͙̞̝͔͇͝ͅa͏͓͔̹̼̣l̴͔̰̤̟͔ḽ̫.͕', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"̦H̬̤̗̤͝e͜ ̜̥̝̻͍̟́w̕h̖̯͓o̝͙̖͎̱̮ ҉̺̙̞̟͈W̷̼̭a̺̪͍į͈͕̭͙̯̜t̶̼̮s̘͙͖̕ ̠̫̠B̻͍͙͉̳ͅe̵h̵̬͇̫͙i̹͓̳̳̮͎̫̕n͟d̴̪̜̖ ̰͉̩͇͙̲͞ͅT͖̼͓̪͢h͏͓̮̻e̬̝̟ͅ ̤̹̝W͙̞̝͔͇͝ͅa͏͓͔̹̼̣l̴͔̰̤̟͔ḽ̫.͕"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"̦H̬̤̗̤͝e͜ ̜̥̝̻͍̟́w̕h̖̯͓o̝͙̖͎̱̮ ҉̺̙̞̟͈W̷̼̭a̺̪͍į͈͕̭͙̯̜t̶̼̮s̘͙͖̕ ̠̫̠B̻͍͙͉̳ͅe̵h̵̬͇̫͙i̹͓̳̳̮͎̫̕n͟d̴̪̜̖ ̰͉̩͇͙̲͞ͅT͖̼͓̪͢h͏͓̮̻e̬̝̟ͅ ̤̹̝W͙̞̝͔͇͝ͅa͏͓͔̹̼̣l̴͔̰̤̟͔ḽ̫.͕",
        variable:"̦H̬̤̗̤͝e͜ ̜̥̝̻͍̟́w̕h̖̯͓o̝͙̖͎̱̮ ҉̺̙̞̟͈W̷̼̭a̺̪͍į͈͕̭͙̯̜t̶̼̮s̘͙͖̕ ̠̫̠B̻͍͙͉̳ͅe̵h̵̬͇̫͙i̹͓̳̳̮͎̫̕n͟d̴̪̜̖ ̰͉̩͇͙̲͞ͅT͖̼͓̪͢h͏͓̮̻e̬̝̟ͅ ̤̹̝W͙̞̝͔͇͝ͅa͏͓͔̹̼̣l̴͔̰̤̟͔ḽ̫.͕",
        concatenated:"̦H̬̤̗̤͝e͜ ̜̥̝̻͍̟́w̕h̖̯͓o̝͙̖͎̱̮ ҉̺̙̞̟͈W̷̼̭a̺̪͍į͈͕̭͙̯̜t̶̼̮s̘͙͖̕ ̠̫̠B̻͍͙͉̳ͅe̵h̵̬͇̫͙i̹͓̳̳̮͎̫̕n͟d̴̪̜̖ ̰͉̩͇͙̲͞ͅT͖̼͓̪͢h͏͓̮̻e̬̝̟ͅ ̤̹̝W͙̞̝͔͇͝ͅa͏͓͔̹̼̣l̴͔̰̤̟͔ḽ̫.͕̦H̬̤̗̤͝e͜ ̜̥̝̻͍̟́w̕h̖̯͓o̝͙̖͎̱̮ ҉̺̙̞̟͈W̷̼̭a̺̪͍į͈͕̭͙̯̜t̶̼̮s̘͙͖̕ ̠̫̠B̻͍͙͉̳ͅe̵h̵̬͇̫͙i̹͓̳̳̮͎̫̕n͟d̴̪̜̖ ̰͉̩͇͙̲͞ͅT͖̼͓̪͢h͏͓̮̻e̬̝̟ͅ ̤̹̝W͙̞̝͔͇͝ͅa͏͓͔̹̼̣l̴͔̰̤̟͔ḽ̫.͕"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Z\\u032e\\u031e\\u0320\\u0359\\u0354\\u0345\\u1e00\\u0317\\u031e\\u0348\\u033b\\u0317\\u1e36\\u0359\\u034e\\u032f\\u0339\\u031e\\u0353G\\u033bO\\u032d\\u0317\\u032e\"}",
    statement:"{ `literal`: 'Z̮̞̠͙͔ͅḀ̗̞͈̻̗Ḷ͙͎̯̹̞͓G̻O̭̗̮', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Z̮̞̠͙͔ͅḀ̗̞͈̻̗Ḷ͙͎̯̹̞͓G̻O̭̗̮"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Z̮̞̠͙͔ͅḀ̗̞͈̻̗Ḷ͙͎̯̹̞͓G̻O̭̗̮",
        variable:"Z̮̞̠͙͔ͅḀ̗̞͈̻̗Ḷ͙͎̯̹̞͓G̻O̭̗̮",
        concatenated:"Z̮̞̠͙͔ͅḀ̗̞͈̻̗Ḷ͙͎̯̹̞͓G̻O̭̗̮Z̮̞̠͙͔ͅḀ̗̞͈̻̗Ḷ͙͎̯̹̞͓G̻O̭̗̮"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"00\\u02d9\\u0196-\"}",
    statement:"{ `literal`: '00˙Ɩ$-', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"00˙Ɩ$-"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"00˙Ɩ$-",
        variable:"00˙Ɩ$-",
        concatenated:"00˙Ɩ$-00˙Ɩ$-"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uff34\\uff48\\uff45 \\uff51\\uff55\\uff49\\uff43\\uff4b \\uff42\\uff52\\uff4f\\uff57\\uff4e \\uff46\\uff4f\\uff58 \\uff4a\\uff55\\uff4d\\uff50\\uff53 \\uff4f\\uff56\\uff45\\uff52 \\uff54\\uff48\\uff45 \\uff4c\\uff41\\uff5a\\uff59 \\uff44\\uff4f\\uff47\"}",
    statement:"{ `literal`: 'Ｔｈｅ ｑｕｉｃｋ ｂｒｏｗｎ ｆｏｘ ｊｕｍｐｓ ｏｖｅｒ ｔｈｅ ｌａｚｙ ｄｏｇ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Ｔｈｅ ｑｕｉｃｋ ｂｒｏｗｎ ｆｏｘ ｊｕｍｐｓ ｏｖｅｒ ｔｈｅ ｌａｚｙ ｄｏｇ"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Ｔｈｅ ｑｕｉｃｋ ｂｒｏｗｎ ｆｏｘ ｊｕｍｐｓ ｏｖｅｒ ｔｈｅ ｌａｚｙ ｄｏｇ",
        variable:"Ｔｈｅ ｑｕｉｃｋ ｂｒｏｗｎ ｆｏｘ ｊｕｍｐｓ ｏｖｅｒ ｔｈｅ ｌａｚｙ ｄｏｇ",
        concatenated:"Ｔｈｅ ｑｕｉｃｋ ｂｒｏｗｎ ｆｏｘ ｊｕｍｐｓ ｏｖｅｒ ｔｈｅ ｌａｚｙ ｄｏｇＴｈｅ ｑｕｉｃｋ ｂｒｏｗｎ ｆｏｘ ｊｕｍｐｓ ｏｖｅｒ ｔｈｅ ｌａｚｙ ｄｏｇ"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001d413\\U0001d421\\U0001d41e \\U0001d42a\\U0001d42e\\U0001d422\\U0001d41c\\U0001d424 \\U0001d41b\\U0001d42b\\U0001d428\\U0001d430\\U0001d427 \\U0001d41f\\U0001d428\\U0001d431 \\U0001d423\\U0001d42e\\U0001d426\\U0001d429\\U0001d42c \\U0001d428\\U0001d42f\\U0001d41e\\U0001d42b \\U0001d42d\\U0001d421\\U0001d41e \\U0001d425\\U0001d41a\\U0001d433\\U0001d432 \\U0001d41d\\U0001d428\\U0001d420\"}",
    statement:"{ `literal`: '𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠",
        variable:"𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠",
        concatenated:"𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001d57f\\U0001d58d\\U0001d58a \\U0001d596\\U0001d59a\\U0001d58e\\U0001d588\\U0001d590 \\U0001d587\\U0001d597\\U0001d594\\U0001d59c\\U0001d593 \\U0001d58b\\U0001d594\\U0001d59d \\U0001d58f\\U0001d59a\\U0001d592\\U0001d595\\U0001d598 \\U0001d594\\U0001d59b\\U0001d58a\\U0001d597 \\U0001d599\\U0001d58d\\U0001d58a \\U0001d591\\U0001d586\\U0001d59f\\U0001d59e \\U0001d589\\U0001d594\\U0001d58c\"}",
    statement:"{ `literal`: '𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐 𝖇𝖗𝖔𝖜𝖓 𝖋𝖔𝖝 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 𝖉𝖔𝖌', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐 𝖇𝖗𝖔𝖜𝖓 𝖋𝖔𝖝 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 𝖉𝖔𝖌"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐 𝖇𝖗𝖔𝖜𝖓 𝖋𝖔𝖝 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 𝖉𝖔𝖌",
        variable:"𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐 𝖇𝖗𝖔𝖜𝖓 𝖋𝖔𝖝 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 𝖉𝖔𝖌",
        concatenated:"𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐 𝖇𝖗𝖔𝖜𝖓 𝖋𝖔𝖝 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 𝖉𝖔𝖌𝕿𝖍𝖊 𝖖𝖚𝖎𝖈𝖐 𝖇𝖗𝖔𝖜𝖓 𝖋𝖔𝖝 𝖏𝖚𝖒𝖕𝖘 𝖔𝖛𝖊𝖗 𝖙𝖍𝖊 𝖑𝖆𝖟𝖞 𝖉𝖔𝖌"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001d47b\\U0001d489\\U0001d486 \\U0001d492\\U0001d496\\U0001d48a\\U0001d484\\U0001d48c \\U0001d483\\U0001d493\\U0001d490\\U0001d498\\U0001d48f \\U0001d487\\U0001d490\\U0001d499 \\U0001d48b\\U0001d496\\U0001d48e\\U0001d491\\U0001d494 \\U0001d490\\U0001d497\\U0001d486\\U0001d493 \\U0001d495\\U0001d489\\U0001d486 \\U0001d48d\\U0001d482\\U0001d49b\\U0001d49a \\U0001d485\\U0001d490\\U0001d488\"}",
    statement:"{ `literal`: '𝑻𝒉𝒆 𝒒𝒖𝒊𝒄𝒌 𝒃𝒓𝒐𝒘𝒏 𝒇𝒐𝒙 𝒋𝒖𝒎𝒑𝒔 𝒐𝒗𝒆𝒓 𝒕𝒉𝒆 𝒍𝒂𝒛𝒚 𝒅𝒐𝒈', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𝑻𝒉𝒆 𝒒𝒖𝒊𝒄𝒌 𝒃𝒓𝒐𝒘𝒏 𝒇𝒐𝒙 𝒋𝒖𝒎𝒑𝒔 𝒐𝒗𝒆𝒓 𝒕𝒉𝒆 𝒍𝒂𝒛𝒚 𝒅𝒐𝒈"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𝑻𝒉𝒆 𝒒𝒖𝒊𝒄𝒌 𝒃𝒓𝒐𝒘𝒏 𝒇𝒐𝒙 𝒋𝒖𝒎𝒑𝒔 𝒐𝒗𝒆𝒓 𝒕𝒉𝒆 𝒍𝒂𝒛𝒚 𝒅𝒐𝒈",
        variable:"𝑻𝒉𝒆 𝒒𝒖𝒊𝒄𝒌 𝒃𝒓𝒐𝒘𝒏 𝒇𝒐𝒙 𝒋𝒖𝒎𝒑𝒔 𝒐𝒗𝒆𝒓 𝒕𝒉𝒆 𝒍𝒂𝒛𝒚 𝒅𝒐𝒈",
        concatenated:"𝑻𝒉𝒆 𝒒𝒖𝒊𝒄𝒌 𝒃𝒓𝒐𝒘𝒏 𝒇𝒐𝒙 𝒋𝒖𝒎𝒑𝒔 𝒐𝒗𝒆𝒓 𝒕𝒉𝒆 𝒍𝒂𝒛𝒚 𝒅𝒐𝒈𝑻𝒉𝒆 𝒒𝒖𝒊𝒄𝒌 𝒃𝒓𝒐𝒘𝒏 𝒇𝒐𝒙 𝒋𝒖𝒎𝒑𝒔 𝒐𝒗𝒆𝒓 𝒕𝒉𝒆 𝒍𝒂𝒛𝒚 𝒅𝒐𝒈"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001d4e3\\U0001d4f1\\U0001d4ee \\U0001d4fa\\U0001d4fe\\U0001d4f2\\U0001d4ec\\U0001d4f4 \\U0001d4eb\\U0001d4fb\\U0001d4f8\\U0001d500\\U0001d4f7 \\U0001d4ef\\U0001d4f8\\U0001d501 \\U0001d4f3\\U0001d4fe\\U0001d4f6\\U0001d4f9\\U0001d4fc \\U0001d4f8\\U0001d4ff\\U0001d4ee\\U0001d4fb \\U0001d4fd\\U0001d4f1\\U0001d4ee \\U0001d4f5\\U0001d4ea\\U0001d503\\U0001d502 \\U0001d4ed\\U0001d4f8\\U0001d4f0\"}",
    statement:"{ `literal`: '𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰",
        variable:"𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰",
        concatenated:"𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001d54b\\U0001d559\\U0001d556 \\U0001d562\\U0001d566\\U0001d55a\\U0001d554\\U0001d55c \\U0001d553\\U0001d563\\U0001d560\\U0001d568\\U0001d55f \\U0001d557\\U0001d560\\U0001d569 \\U0001d55b\\U0001d566\\U0001d55e\\U0001d561\\U0001d564 \\U0001d560\\U0001d567\\U0001d556\\U0001d563 \\U0001d565\\U0001d559\\U0001d556 \\U0001d55d\\U0001d552\\U0001d56b\\U0001d56a \\U0001d555\\U0001d560\\U0001d558\"}",
    statement:"{ `literal`: '𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕤 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕤 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕤 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘",
        variable:"𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕤 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘",
        concatenated:"𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕤 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕤 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\U0001d683\\U0001d691\\U0001d68e \\U0001d69a\\U0001d69e\\U0001d692\\U0001d68c\\U0001d694 \\U0001d68b\\U0001d69b\\U0001d698\\U0001d6a0\\U0001d697 \\U0001d68f\\U0001d698\\U0001d6a1 \\U0001d693\\U0001d69e\\U0001d696\\U0001d699\\U0001d69c \\U0001d698\\U0001d69f\\U0001d68e\\U0001d69b \\U0001d69d\\U0001d691\\U0001d68e \\U0001d695\\U0001d68a\\U0001d6a3\\U0001d6a2 \\U0001d68d\\U0001d698\\U0001d690\"}",
    statement:"{ `literal`: '𝚃𝚑𝚎 𝚚𝚞𝚒𝚌𝚔 𝚋𝚛𝚘𝚠𝚗 𝚏𝚘𝚡 𝚓𝚞𝚖𝚙𝚜 𝚘𝚟𝚎𝚛 𝚝𝚑𝚎 𝚕𝚊𝚣𝚢 𝚍𝚘𝚐', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"𝚃𝚑𝚎 𝚚𝚞𝚒𝚌𝚔 𝚋𝚛𝚘𝚠𝚗 𝚏𝚘𝚡 𝚓𝚞𝚖𝚙𝚜 𝚘𝚟𝚎𝚛 𝚝𝚑𝚎 𝚕𝚊𝚣𝚢 𝚍𝚘𝚐"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"𝚃𝚑𝚎 𝚚𝚞𝚒𝚌𝚔 𝚋𝚛𝚘𝚠𝚗 𝚏𝚘𝚡 𝚓𝚞𝚖𝚙𝚜 𝚘𝚟𝚎𝚛 𝚝𝚑𝚎 𝚕𝚊𝚣𝚢 𝚍𝚘𝚐",
        variable:"𝚃𝚑𝚎 𝚚𝚞𝚒𝚌𝚔 𝚋𝚛𝚘𝚠𝚗 𝚏𝚘𝚡 𝚓𝚞𝚖𝚙𝚜 𝚘𝚟𝚎𝚛 𝚝𝚑𝚎 𝚕𝚊𝚣𝚢 𝚍𝚘𝚐",
        concatenated:"𝚃𝚑𝚎 𝚚𝚞𝚒𝚌𝚔 𝚋𝚛𝚘𝚠𝚗 𝚏𝚘𝚡 𝚓𝚞𝚖𝚙𝚜 𝚘𝚟𝚎𝚛 𝚝𝚑𝚎 𝚕𝚊𝚣𝚢 𝚍𝚘𝚐𝚃𝚑𝚎 𝚚𝚞𝚒𝚌𝚔 𝚋𝚛𝚘𝚠𝚗 𝚏𝚘𝚡 𝚓𝚞𝚖𝚙𝚜 𝚘𝚟𝚎𝚛 𝚝𝚑𝚎 𝚕𝚊𝚣𝚢 𝚍𝚘𝚐"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\u24af\\u24a3\\u24a0 \\u24ac\\u24b0\\u24a4\\u249e\\u24a6 \\u249d\\u24ad\\u24aa\\u24b2\\u24a9 \\u24a1\\u24aa\\u24b3 \\u24a5\\u24b0\\u24a8\\u24ab\\u24ae \\u24aa\\u24b1\\u24a0\\u24ad \\u24af\\u24a3\\u24a0 \\u24a7\\u249c\\u24b5\\u24b4 \\u249f\\u24aa\\u24a2\"}",
    statement:"{ `literal`: '⒯⒣⒠ ⒬⒰⒤⒞⒦ ⒝⒭⒪⒲⒩ ⒡⒪⒳ ⒥⒰⒨⒫⒮ ⒪⒱⒠⒭ ⒯⒣⒠ ⒧⒜⒵⒴ ⒟⒪⒢', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"⒯⒣⒠ ⒬⒰⒤⒞⒦ ⒝⒭⒪⒲⒩ ⒡⒪⒳ ⒥⒰⒨⒫⒮ ⒪⒱⒠⒭ ⒯⒣⒠ ⒧⒜⒵⒴ ⒟⒪⒢"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"⒯⒣⒠ ⒬⒰⒤⒞⒦ ⒝⒭⒪⒲⒩ ⒡⒪⒳ ⒥⒰⒨⒫⒮ ⒪⒱⒠⒭ ⒯⒣⒠ ⒧⒜⒵⒴ ⒟⒪⒢",
        variable:"⒯⒣⒠ ⒬⒰⒤⒞⒦ ⒝⒭⒪⒲⒩ ⒡⒪⒳ ⒥⒰⒨⒫⒮ ⒪⒱⒠⒭ ⒯⒣⒠ ⒧⒜⒵⒴ ⒟⒪⒢",
        concatenated:"⒯⒣⒠ ⒬⒰⒤⒞⒦ ⒝⒭⒪⒲⒩ ⒡⒪⒳ ⒥⒰⒨⒫⒮ ⒪⒱⒠⒭ ⒯⒣⒠ ⒧⒜⒵⒴ ⒟⒪⒢⒯⒣⒠ ⒬⒰⒤⒞⒦ ⒝⒭⒪⒲⒩ ⒡⒪⒳ ⒥⒰⒨⒫⒮ ⒪⒱⒠⒭ ⒯⒣⒠ ⒧⒜⒵⒴ ⒟⒪⒢"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script>alert(123)</script>\"}",
    statement:"{ `literal`: '<script>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script>alert(123)</script>",
        variable:"<script>alert(123)</script>",
        concatenated:"<script>alert(123)</script><script>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;\"}",
    statement:"{ `literal`: '&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;",
        variable:"&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;",
        concatenated:"&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=alert(123) />\"}",
    statement:"{ `literal`: '<img src=x onerror=alert(123) />', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=alert(123) />"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=alert(123) />",
        variable:"<img src=x onerror=alert(123) />",
        concatenated:"<img src=x onerror=alert(123) /><img src=x onerror=alert(123) />"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<svg><script>123<1>alert(123)</script>\"}",
    statement:"{ `literal`: '<svg><script>123<1>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<svg><script>123<1>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<svg><script>123<1>alert(123)</script>",
        variable:"<svg><script>123<1>alert(123)</script>",
        concatenated:"<svg><script>123<1>alert(123)</script><svg><script>123<1>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\"><script>alert(123)</script>\"}",
    statement:"{ `literal`: '\"><script>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\"><script>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\"><script>alert(123)</script>",
        variable:"\"><script>alert(123)</script>",
        concatenated:"\"><script>alert(123)</script>\"><script>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"><script>alert(123)</script>\"}",
    statement:"{ `literal`: '><script>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"><script>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"><script>alert(123)</script>",
        variable:"><script>alert(123)</script>",
        concatenated:"><script>alert(123)</script>><script>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"</script><script>alert(123)</script>\"}",
    statement:"{ `literal`: '</script><script>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"</script><script>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"</script><script>alert(123)</script>",
        variable:"</script><script>alert(123)</script>",
        concatenated:"</script><script>alert(123)</script></script><script>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"< / script >< script >alert(123)< / script >\"}",
    statement:"{ `literal`: '< / script >< script >alert(123)< / script >', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"< / script >< script >alert(123)< / script >"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"< / script >< script >alert(123)< / script >",
        variable:"< / script >< script >alert(123)< / script >",
        concatenated:"< / script >< script >alert(123)< / script >< / script >< script >alert(123)< / script >"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\" onfocus=JaVaSCript:alert(123) autofocus\"}",
    statement:"{ `literal`: ' onfocus=JaVaSCript:alert(123) autofocus', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:" onfocus=JaVaSCript:alert(123) autofocus"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:" onfocus=JaVaSCript:alert(123) autofocus",
        variable:" onfocus=JaVaSCript:alert(123) autofocus",
        concatenated:" onfocus=JaVaSCript:alert(123) autofocus onfocus=JaVaSCript:alert(123) autofocus"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\" onfocus=JaVaSCript:alert(123) autofocus\"}",
    statement:"{ `literal`: '\" onfocus=JaVaSCript:alert(123) autofocus', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\" onfocus=JaVaSCript:alert(123) autofocus"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\" onfocus=JaVaSCript:alert(123) autofocus",
        variable:"\" onfocus=JaVaSCript:alert(123) autofocus",
        concatenated:"\" onfocus=JaVaSCript:alert(123) autofocus\" onfocus=JaVaSCript:alert(123) autofocus"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\uff1cscript\\uff1ealert(123)\\uff1c/script\\uff1e\"}",
    statement:"{ `literal`: '＜script＞alert(123)＜/script＞', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"＜script＞alert(123)＜/script＞"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"＜script＞alert(123)＜/script＞",
        variable:"＜script＞alert(123)＜/script＞",
        concatenated:"＜script＞alert(123)＜/script＞＜script＞alert(123)＜/script＞"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<sc<script>ript>alert(123)</sc</script>ript>\"}",
    statement:"{ `literal`: '<sc<script>ript>alert(123)</sc</script>ript>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<sc<script>ript>alert(123)</sc</script>ript>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<sc<script>ript>alert(123)</sc</script>ript>",
        variable:"<sc<script>ript>alert(123)</sc</script>ript>",
        concatenated:"<sc<script>ript>alert(123)</sc</script>ript><sc<script>ript>alert(123)</sc</script>ript>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"--><script>alert(123)</script>\"}",
    statement:"{ `literal`: '--><script>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"--><script>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"--><script>alert(123)</script>",
        variable:"--><script>alert(123)</script>",
        concatenated:"--><script>alert(123)</script>--><script>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\";alert(123);t=\\\"\"}",
    statement:"{ `literal`: '\";alert(123);t=\"', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\";alert(123);t=\""
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\";alert(123);t=\"",
        variable:"\";alert(123);t=\"",
        concatenated:"\";alert(123);t=\"\";alert(123);t=\""
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"JavaSCript:alert(123)\"}",
    statement:"{ `literal`: 'JavaSCript:alert(123)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"JavaSCript:alert(123)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"JavaSCript:alert(123)",
        variable:"JavaSCript:alert(123)",
        concatenated:"JavaSCript:alert(123)JavaSCript:alert(123)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\";alert(123);\"}",
    statement:"{ `literal`: ';alert(123);', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:";alert(123);"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:";alert(123);",
        variable:";alert(123);",
        concatenated:";alert(123);;alert(123);"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"src=JaVaSCript:prompt(132)\"}",
    statement:"{ `literal`: 'src=JaVaSCript:prompt(132)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"src=JaVaSCript:prompt(132)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"src=JaVaSCript:prompt(132)",
        variable:"src=JaVaSCript:prompt(132)",
        concatenated:"src=JaVaSCript:prompt(132)src=JaVaSCript:prompt(132)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\"><script>alert(123);</script x=\\\"\"}",
    statement:"{ `literal`: '\"><script>alert(123);</script x=\"', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\"><script>alert(123);</script x=\""
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\"><script>alert(123);</script x=\"",
        variable:"\"><script>alert(123);</script x=\"",
        concatenated:"\"><script>alert(123);</script x=\"\"><script>alert(123);</script x=\""
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"><script>alert(123);</script x=\"}",
    statement:"{ `literal`: '><script>alert(123);</script x=', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"><script>alert(123);</script x="
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"><script>alert(123);</script x=",
        variable:"><script>alert(123);</script x=",
        concatenated:"><script>alert(123);</script x=><script>alert(123);</script x="
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"\\\" autofocus onkeyup=\\\"javascript:alert(123)\"}",
    statement:"{ `literal`: '\" autofocus onkeyup=\"javascript:alert(123)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"\" autofocus onkeyup=\"javascript:alert(123)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"\" autofocus onkeyup=\"javascript:alert(123)",
        variable:"\" autofocus onkeyup=\"javascript:alert(123)",
        concatenated:"\" autofocus onkeyup=\"javascript:alert(123)\" autofocus onkeyup=\"javascript:alert(123)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x20type=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x20type=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x20type=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x20type=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x20type=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x20type=\"text/javascript\">javascript:alert(1);</script><script\\x20type=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x3Etype=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x3Etype=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x3Etype=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x3Etype=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x3Etype=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x3Etype=\"text/javascript\">javascript:alert(1);</script><script\\x3Etype=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x0Dtype=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x0Dtype=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x0Dtype=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x0Dtype=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x0Dtype=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x0Dtype=\"text/javascript\">javascript:alert(1);</script><script\\x0Dtype=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x09type=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x09type=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x09type=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x09type=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x09type=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x09type=\"text/javascript\">javascript:alert(1);</script><script\\x09type=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x0Ctype=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x0Ctype=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x0Ctype=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x0Ctype=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x0Ctype=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x0Ctype=\"text/javascript\">javascript:alert(1);</script><script\\x0Ctype=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x2Ftype=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x2Ftype=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x2Ftype=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x2Ftype=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x2Ftype=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x2Ftype=\"text/javascript\">javascript:alert(1);</script><script\\x2Ftype=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script\\\\x0Atype=\\\"text/javascript\\\">javascript:alert(1);</script>\"}",
    statement:"{ `literal`: '<script\\x0Atype=\"text/javascript\">javascript:alert(1);</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script\\x0Atype=\"text/javascript\">javascript:alert(1);</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script\\x0Atype=\"text/javascript\">javascript:alert(1);</script>",
        variable:"<script\\x0Atype=\"text/javascript\">javascript:alert(1);</script>",
        concatenated:"<script\\x0Atype=\"text/javascript\">javascript:alert(1);</script><script\\x0Atype=\"text/javascript\">javascript:alert(1);</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x\\\\x3Aexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x\\x3Aexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x\\x3Aexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x\\x3Aexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x\\x3Aexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x\\x3Aexpression(javascript:alert(1)\">DEFABC<div style=\"x\\x3Aexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:expression\\\\x5C(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:expression\\x5C(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:expression\\x5C(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:expression\\x5C(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:expression\\x5C(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:expression\\x5C(javascript:alert(1)\">DEFABC<div style=\"x:expression\\x5C(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:expression\\\\x00(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:expression\\x00(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:expression\\x00(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:expression\\x00(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:expression\\x00(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:expression\\x00(javascript:alert(1)\">DEFABC<div style=\"x:expression\\x00(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:exp\\\\x00ression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:exp\\x00ression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:exp\\x00ression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:exp\\x00ression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:exp\\x00ression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:exp\\x00ression(javascript:alert(1)\">DEFABC<div style=\"x:exp\\x00ression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:exp\\\\x5Cression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:exp\\x5Cression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:exp\\x5Cression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:exp\\x5Cression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:exp\\x5Cression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:exp\\x5Cression(javascript:alert(1)\">DEFABC<div style=\"x:exp\\x5Cression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x0Aexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x0Aexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x0Aexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x0Aexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x0Aexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x0Aexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\x0Aexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x09expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x09expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x09expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x09expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x09expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x09expression(javascript:alert(1)\">DEFABC<div style=\"x:\\x09expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE3\\\\x80\\\\x80expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE3\\x80\\x80expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE3\\x80\\x80expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE3\\x80\\x80expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE3\\x80\\x80expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE3\\x80\\x80expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE3\\x80\\x80expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x84expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x84expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x84expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x84expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x84expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x84expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x84expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xC2\\\\xA0expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xC2\\xA0expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xC2\\xA0expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xC2\\xA0expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xC2\\xA0expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xC2\\xA0expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xC2\\xA0expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x80expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x80expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x80expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x80expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x80expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x80expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x80expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x8Aexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x0Dexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x0Dexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x0Dexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x0Dexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x0Dexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x0Dexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\x0Dexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x0Cexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x0Cexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x0Cexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x0Cexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x0Cexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x0Cexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\x0Cexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x87expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x87expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x87expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x87expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x87expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x87expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x87expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xEF\\\\xBB\\\\xBFexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x20expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x20expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x20expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x20expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x20expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x20expression(javascript:alert(1)\">DEFABC<div style=\"x:\\x20expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x88expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x88expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x88expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x88expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x88expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x88expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x88expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x00expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x00expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x00expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x00expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x00expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x00expression(javascript:alert(1)\">DEFABC<div style=\"x:\\x00expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x8Bexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x86expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x85expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x85expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x85expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x85expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x85expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x85expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x85expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x82expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x82expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x82expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x82expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x82expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x82expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x82expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\x0Bexpression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\x0Bexpression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\x0Bexpression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\x0Bexpression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\x0Bexpression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\x0Bexpression(javascript:alert(1)\">DEFABC<div style=\"x:\\x0Bexpression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x81expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x83expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x83expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x83expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x83expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x83expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x83expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x83expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ABC<div style=\\\"x:\\\\xE2\\\\x80\\\\x89expression(javascript:alert(1)\\\">DEF\"}",
    statement:"{ `literal`: 'ABC<div style=\"x:\\xE2\\x80\\x89expression(javascript:alert(1)\">DEF', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ABC<div style=\"x:\\xE2\\x80\\x89expression(javascript:alert(1)\">DEF"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ABC<div style=\"x:\\xE2\\x80\\x89expression(javascript:alert(1)\">DEF",
        variable:"ABC<div style=\"x:\\xE2\\x80\\x89expression(javascript:alert(1)\">DEF",
        concatenated:"ABC<div style=\"x:\\xE2\\x80\\x89expression(javascript:alert(1)\">DEFABC<div style=\"x:\\xE2\\x80\\x89expression(javascript:alert(1)\">DEF"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x0Bjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x0Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x0Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x0Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x0Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x0Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x0Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x0Fjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x0Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x0Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x0Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x0Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x0Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x0Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xC2\\\\xA0javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xC2\\xA0javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xC2\\xA0javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xC2\\xA0javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xC2\\xA0javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xC2\\xA0javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xC2\\xA0javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x05javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x05javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x05javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x05javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x05javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x05javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x05javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE1\\\\xA0\\\\x8Ejavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x18javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x18javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x18javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x18javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x18javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x18javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x18javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x11javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x11javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x11javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x11javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x11javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x11javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x11javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x88javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x89javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x89javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x89javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x89javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x89javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x89javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x89javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x80javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x17javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x03javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x03javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x03javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x03javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x03javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x03javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x03javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x0Ejavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x0Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x0Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x0Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x0Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x0Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x0Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x1Ajavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x1Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x1Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x1Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x1Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x1Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x1Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x00javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x00javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x00javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x00javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x00javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x00javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x00javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x10javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x10javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x10javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x10javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x10javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x10javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x10javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x82javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x82javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x82javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x82javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x82javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x82javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x82javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x20javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x20javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x20javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x20javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x20javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x20javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x20javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x13javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x13javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x13javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x13javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x13javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x13javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x13javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x09javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x09javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x09javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x09javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x09javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x09javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x09javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x8Ajavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x8Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x8Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x8Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x8Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x8Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x8Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x14javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x14javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x14javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x14javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x14javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x14javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x14javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x19javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x19javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x19javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x19javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x19javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x19javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x19javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\xAFjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\xAFjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\xAFjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\xAFjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\xAFjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\xAFjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\xAFjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x1Fjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x1Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x1Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x1Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x1Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x1Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x1Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x81javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x81javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x81javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x81javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x81javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x81javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x81javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x1Djavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x1Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x1Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x1Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x1Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x1Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x1Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x87javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x87javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x87javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x87javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x87javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x87javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x87javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x07javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x07javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x07javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x07javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x07javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x07javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x07javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE1\\\\x9A\\\\x80javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE1\\x9A\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE1\\x9A\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE1\\x9A\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE1\\x9A\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE1\\x9A\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE1\\x9A\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x83javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x83javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x83javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x83javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x83javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x83javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x83javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x04javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x04javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x04javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x04javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x04javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x04javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x04javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x01javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x01javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x01javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x01javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x01javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x01javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x01javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x08javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x08javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x08javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x08javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x08javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x08javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x08javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x84javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x84javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x84javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x84javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x84javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x84javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x84javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x86javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x86javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x86javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x86javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x86javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x86javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x86javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE3\\\\x80\\\\x80javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE3\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE3\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE3\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE3\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE3\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE3\\x80\\x80javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x12javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x12javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x12javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x12javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x12javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x12javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x12javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x0Djavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x0Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x0Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x0Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x0Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x0Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x0Djavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x0Ajavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x0Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x0Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x0Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x0Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x0Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x0Ajavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x0Cjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x0Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x0Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x0Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x0Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x0Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x0Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x15javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x15javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x15javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x15javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x15javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x15javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x15javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\xA8javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\xA8javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\xA8javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\xA8javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\xA8javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\xA8javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\xA8javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x16javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x16javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x16javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x16javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x16javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x16javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x16javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x02javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x02javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x02javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x02javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x02javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x02javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x02javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x1Bjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x1Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x1Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x1Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x1Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x1Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x1Bjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x06javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x06javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x06javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x06javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x06javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x06javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x06javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\xA9javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x80\\\\x85javascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x80\\x85javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x80\\x85javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x80\\x85javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x80\\x85javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x80\\x85javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x80\\x85javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x1Ejavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x1Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x1Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x1Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x1Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x1Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x1Ejavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\xE2\\\\x81\\\\x9Fjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\xE2\\x81\\x9Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\xE2\\x81\\x9Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\xE2\\x81\\x9Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\xE2\\x81\\x9Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\xE2\\x81\\x9Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\xE2\\x81\\x9Fjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"\\\\x1Cjavascript:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"\\x1Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"\\x1Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"\\x1Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"\\x1Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"\\x1Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"\\x1Cjavascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"javascript\\\\x00:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"javascript\\x00:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"javascript\\x00:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"javascript\\x00:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"javascript\\x00:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"javascript\\x00:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"javascript\\x00:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"javascript\\\\x3A:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"javascript\\x3A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"javascript\\x3A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"javascript\\x3A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"javascript\\x3A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"javascript\\x3A:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"javascript\\x3A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"javascript\\\\x09:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"javascript\\x09:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"javascript\\x09:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"javascript\\x09:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"javascript\\x09:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"javascript\\x09:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"javascript\\x09:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"javascript\\\\x0D:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"javascript\\x0D:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"javascript\\x0D:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"javascript\\x0D:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"javascript\\x0D:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"javascript\\x0D:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"javascript\\x0D:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=\\\"javascript\\\\x0A:javascript:alert(1)\\\" id=\\\"fuzzelement1\\\">test</a>\"}",
    statement:"{ `literal`: '<a href=\"javascript\\x0A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=\"javascript\\x0A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=\"javascript\\x0A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        variable:"<a href=\"javascript\\x0A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>",
        concatenated:"<a href=\"javascript\\x0A:javascript:alert(1)\" id=\"fuzzelement1\">test</a><a href=\"javascript\\x0A:javascript:alert(1)\" id=\"fuzzelement1\">test</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img \\\\x47src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img \\x47src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img \\x47src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img \\x47src=x onerror=\"javascript:alert(1)\">",
        variable:"<img \\x47src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img \\x47src=x onerror=\"javascript:alert(1)\"><img \\x47src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img \\\\x11src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img \\x11src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img \\x11src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img \\x11src=x onerror=\"javascript:alert(1)\">",
        variable:"<img \\x11src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img \\x11src=x onerror=\"javascript:alert(1)\"><img \\x11src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img \\\\x12src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img \\x12src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img \\x12src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img \\x12src=x onerror=\"javascript:alert(1)\">",
        variable:"<img \\x12src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img \\x12src=x onerror=\"javascript:alert(1)\"><img \\x12src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img\\\\x47src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img\\x47src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img\\x47src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img\\x47src=x onerror=\"javascript:alert(1)\">",
        variable:"<img\\x47src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img\\x47src=x onerror=\"javascript:alert(1)\"><img\\x47src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img\\\\x10src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img\\x10src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img\\x10src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img\\x10src=x onerror=\"javascript:alert(1)\">",
        variable:"<img\\x10src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img\\x10src=x onerror=\"javascript:alert(1)\"><img\\x10src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img\\\\x13src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img\\x13src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img\\x13src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img\\x13src=x onerror=\"javascript:alert(1)\">",
        variable:"<img\\x13src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img\\x13src=x onerror=\"javascript:alert(1)\"><img\\x13src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img\\\\x32src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img\\x32src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img\\x32src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img\\x32src=x onerror=\"javascript:alert(1)\">",
        variable:"<img\\x32src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img\\x32src=x onerror=\"javascript:alert(1)\"><img\\x32src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img\\\\x11src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img\\x11src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img\\x11src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img\\x11src=x onerror=\"javascript:alert(1)\">",
        variable:"<img\\x11src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img\\x11src=x onerror=\"javascript:alert(1)\"><img\\x11src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img \\\\x34src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img \\x34src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img \\x34src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img \\x34src=x onerror=\"javascript:alert(1)\">",
        variable:"<img \\x34src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img \\x34src=x onerror=\"javascript:alert(1)\"><img \\x34src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img \\\\x39src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img \\x39src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img \\x39src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img \\x39src=x onerror=\"javascript:alert(1)\">",
        variable:"<img \\x39src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img \\x39src=x onerror=\"javascript:alert(1)\"><img \\x39src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img \\\\x00src=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img \\x00src=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img \\x00src=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img \\x00src=x onerror=\"javascript:alert(1)\">",
        variable:"<img \\x00src=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img \\x00src=x onerror=\"javascript:alert(1)\"><img \\x00src=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x09=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x09=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x09=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x09=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x09=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x09=x onerror=\"javascript:alert(1)\"><img src\\x09=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x10=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x10=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x10=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x10=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x10=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x10=x onerror=\"javascript:alert(1)\"><img src\\x10=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x13=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x13=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x13=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x13=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x13=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x13=x onerror=\"javascript:alert(1)\"><img src\\x13=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x32=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x32=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x32=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x32=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x32=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x32=x onerror=\"javascript:alert(1)\"><img src\\x32=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x12=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x12=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x12=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x12=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x12=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x12=x onerror=\"javascript:alert(1)\"><img src\\x12=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x11=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x11=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x11=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x11=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x11=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x11=x onerror=\"javascript:alert(1)\"><img src\\x11=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x00=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x00=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x00=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x00=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x00=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x00=x onerror=\"javascript:alert(1)\"><img src\\x00=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src\\\\x47=x onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src\\x47=x onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src\\x47=x onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src\\x47=x onerror=\"javascript:alert(1)\">",
        variable:"<img src\\x47=x onerror=\"javascript:alert(1)\">",
        concatenated:"<img src\\x47=x onerror=\"javascript:alert(1)\"><img src\\x47=x onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x\\\\x09onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x\\x09onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x\\x09onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x\\x09onerror=\"javascript:alert(1)\">",
        variable:"<img src=x\\x09onerror=\"javascript:alert(1)\">",
        concatenated:"<img src=x\\x09onerror=\"javascript:alert(1)\"><img src=x\\x09onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x\\\\x10onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x\\x10onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x\\x10onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x\\x10onerror=\"javascript:alert(1)\">",
        variable:"<img src=x\\x10onerror=\"javascript:alert(1)\">",
        concatenated:"<img src=x\\x10onerror=\"javascript:alert(1)\"><img src=x\\x10onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x\\\\x11onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x\\x11onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x\\x11onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x\\x11onerror=\"javascript:alert(1)\">",
        variable:"<img src=x\\x11onerror=\"javascript:alert(1)\">",
        concatenated:"<img src=x\\x11onerror=\"javascript:alert(1)\"><img src=x\\x11onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x\\\\x12onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x\\x12onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x\\x12onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x\\x12onerror=\"javascript:alert(1)\">",
        variable:"<img src=x\\x12onerror=\"javascript:alert(1)\">",
        concatenated:"<img src=x\\x12onerror=\"javascript:alert(1)\"><img src=x\\x12onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x\\\\x13onerror=\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x\\x13onerror=\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x\\x13onerror=\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x\\x13onerror=\"javascript:alert(1)\">",
        variable:"<img src=x\\x13onerror=\"javascript:alert(1)\">",
        concatenated:"<img src=x\\x13onerror=\"javascript:alert(1)\"><img src=x\\x13onerror=\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img[a][b][c]src[d]=x[e]onerror=[f]\\\"alert(1)\\\">\"}",
    statement:"{ `literal`: '<img[a][b][c]src[d]=x[e]onerror=[f]\"alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img[a][b][c]src[d]=x[e]onerror=[f]\"alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img[a][b][c]src[d]=x[e]onerror=[f]\"alert(1)\">",
        variable:"<img[a][b][c]src[d]=x[e]onerror=[f]\"alert(1)\">",
        concatenated:"<img[a][b][c]src[d]=x[e]onerror=[f]\"alert(1)\"><img[a][b][c]src[d]=x[e]onerror=[f]\"alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=\\\\x09\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x onerror=\\x09\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=\\x09\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=\\x09\"javascript:alert(1)\">",
        variable:"<img src=x onerror=\\x09\"javascript:alert(1)\">",
        concatenated:"<img src=x onerror=\\x09\"javascript:alert(1)\"><img src=x onerror=\\x09\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=\\\\x10\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x onerror=\\x10\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=\\x10\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=\\x10\"javascript:alert(1)\">",
        variable:"<img src=x onerror=\\x10\"javascript:alert(1)\">",
        concatenated:"<img src=x onerror=\\x10\"javascript:alert(1)\"><img src=x onerror=\\x10\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=\\\\x11\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x onerror=\\x11\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=\\x11\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=\\x11\"javascript:alert(1)\">",
        variable:"<img src=x onerror=\\x11\"javascript:alert(1)\">",
        concatenated:"<img src=x onerror=\\x11\"javascript:alert(1)\"><img src=x onerror=\\x11\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=\\\\x12\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x onerror=\\x12\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=\\x12\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=\\x12\"javascript:alert(1)\">",
        variable:"<img src=x onerror=\\x12\"javascript:alert(1)\">",
        concatenated:"<img src=x onerror=\\x12\"javascript:alert(1)\"><img src=x onerror=\\x12\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=\\\\x32\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x onerror=\\x32\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=\\x32\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=\\x32\"javascript:alert(1)\">",
        variable:"<img src=x onerror=\\x32\"javascript:alert(1)\">",
        concatenated:"<img src=x onerror=\\x32\"javascript:alert(1)\"><img src=x onerror=\\x32\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=x onerror=\\\\x00\\\"javascript:alert(1)\\\">\"}",
    statement:"{ `literal`: '<img src=x onerror=\\x00\"javascript:alert(1)\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=x onerror=\\x00\"javascript:alert(1)\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=x onerror=\\x00\"javascript:alert(1)\">",
        variable:"<img src=x onerror=\\x00\"javascript:alert(1)\">",
        concatenated:"<img src=x onerror=\\x00\"javascript:alert(1)\"><img src=x onerror=\\x00\"javascript:alert(1)\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>\"}",
    statement:"{ `literal`: '<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>",
        variable:"<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>",
        concatenated:"<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a><a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<img src=\\\"x` `<script>javascript:alert(1)</script>\\\"` `>\"}",
    statement:"{ `literal`: '<img src=\"x` `<script>javascript:alert(1)</script>\"` `>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<img src=\"x` `<script>javascript:alert(1)</script>\"` `>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<img src=\"x` `<script>javascript:alert(1)</script>\"` `>",
        variable:"<img src=\"x` `<script>javascript:alert(1)</script>\"` `>",
        concatenated:"<img src=\"x` `<script>javascript:alert(1)</script>\"` `><img src=\"x` `<script>javascript:alert(1)</script>\"` `>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<title onpropertychange=javascript:alert(1)></title><title title=>\"}",
    statement:"{ `literal`: '<title onpropertychange=javascript:alert(1)></title><title title=>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<title onpropertychange=javascript:alert(1)></title><title title=>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<title onpropertychange=javascript:alert(1)></title><title title=>",
        variable:"<title onpropertychange=javascript:alert(1)></title><title title=>",
        concatenated:"<title onpropertychange=javascript:alert(1)></title><title title=><title onpropertychange=javascript:alert(1)></title><title title=>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<a href=http://foo.bar/#x=`y></a><img alt=\\\"`><img src=x:x onerror=javascript:alert(1)></a>\\\">\"}",
    statement:"{ `literal`: '<a href=http://foo.bar/#x=`y></a><img alt=\"`><img src=x:x onerror=javascript:alert(1)></a>\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<a href=http://foo.bar/#x=`y></a><img alt=\"`><img src=x:x onerror=javascript:alert(1)></a>\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<a href=http://foo.bar/#x=`y></a><img alt=\"`><img src=x:x onerror=javascript:alert(1)></a>\">",
        variable:"<a href=http://foo.bar/#x=`y></a><img alt=\"`><img src=x:x onerror=javascript:alert(1)></a>\">",
        concatenated:"<a href=http://foo.bar/#x=`y></a><img alt=\"`><img src=x:x onerror=javascript:alert(1)></a>\"><a href=http://foo.bar/#x=`y></a><img alt=\"`><img src=x:x onerror=javascript:alert(1)></a>\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<!--[if]><script>javascript:alert(1)</script -->\"}",
    statement:"{ `literal`: '<!--[if]><script>javascript:alert(1)</script -->', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<!--[if]><script>javascript:alert(1)</script -->"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<!--[if]><script>javascript:alert(1)</script -->",
        variable:"<!--[if]><script>javascript:alert(1)</script -->",
        concatenated:"<!--[if]><script>javascript:alert(1)</script --><!--[if]><script>javascript:alert(1)</script -->"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<!--[if<img src=x onerror=javascript:alert(1)//]> -->\"}",
    statement:"{ `literal`: '<!--[if<img src=x onerror=javascript:alert(1)//]> -->', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<!--[if<img src=x onerror=javascript:alert(1)//]> -->"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<!--[if<img src=x onerror=javascript:alert(1)//]> -->",
        variable:"<!--[if<img src=x onerror=javascript:alert(1)//]> -->",
        concatenated:"<!--[if<img src=x onerror=javascript:alert(1)//]> --><!--[if<img src=x onerror=javascript:alert(1)//]> -->"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script src=\\\"/\\\\%(jscript)s\\\"></script>\"}",
    statement:"{ `literal`: '<script src=\"/\\%(jscript)s\"></script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script src=\"/\\%(jscript)s\"></script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script src=\"/\\%(jscript)s\"></script>",
        variable:"<script src=\"/\\%(jscript)s\"></script>",
        concatenated:"<script src=\"/\\%(jscript)s\"></script><script src=\"/\\%(jscript)s\"></script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<script src=\\\"\\\\\\\\%(jscript)s\\\"></script>\"}",
    statement:"{ `literal`: '<script src=\"\\\\%(jscript)s\"></script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<script src=\"\\\\%(jscript)s\"></script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<script src=\"\\\\%(jscript)s\"></script>",
        variable:"<script src=\"\\\\%(jscript)s\"></script>",
        concatenated:"<script src=\"\\\\%(jscript)s\"></script><script src=\"\\\\%(jscript)s\"></script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<IMG \\\"\\\"\\\"><SCRIPT>alert(\\\"XSS\\\")</SCRIPT>\\\">\"}",
    statement:"{ `literal`: '<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">",
        variable:"<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">",
        concatenated:"<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\"><IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>\"}",
    statement:"{ `literal`: '<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>",
        variable:"<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>",
        concatenated:"<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))><IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>\"}",
    statement:"{ `literal`: '<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>",
        variable:"<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>",
        concatenated:"<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;><IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>\"}",
    statement:"{ `literal`: '<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>",
        variable:"<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>",
        concatenated:"<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041><IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>\"}",
    statement:"{ `literal`: '<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>",
        variable:"<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>",
        concatenated:"<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29><IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<SCRIPT/XSS SRC=\\\"http://ha.ckers.org/xss.js\\\"></SCRIPT>\"}",
    statement:"{ `literal`: '<SCRIPT/XSS SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<SCRIPT/XSS SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<SCRIPT/XSS SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>",
        variable:"<SCRIPT/XSS SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>",
        concatenated:"<SCRIPT/XSS SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT><SCRIPT/XSS SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<BODY onload!#%&()*~+-_.,:;?@[/|\\\\]^`=alert(\\\"XSS\\\")>\"}",
    statement:"{ `literal`: '<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")>",
        variable:"<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")>",
        concatenated:"<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")><BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(\"XSS\")>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<SCRIPT/SRC=\\\"http://ha.ckers.org/xss.js\\\"></SCRIPT>\"}",
    statement:"{ `literal`: '<SCRIPT/SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<SCRIPT/SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<SCRIPT/SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>",
        variable:"<SCRIPT/SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>",
        concatenated:"<SCRIPT/SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT><SCRIPT/SRC=\"http://ha.ckers.org/xss.js\"></SCRIPT>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<<SCRIPT>alert(\\\"XSS\\\");//<</SCRIPT>\"}",
    statement:"{ `literal`: '<<SCRIPT>alert(\"XSS\");//<</SCRIPT>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<<SCRIPT>alert(\"XSS\");//<</SCRIPT>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<<SCRIPT>alert(\"XSS\");//<</SCRIPT>",
        variable:"<<SCRIPT>alert(\"XSS\");//<</SCRIPT>",
        concatenated:"<<SCRIPT>alert(\"XSS\");//<</SCRIPT><<SCRIPT>alert(\"XSS\");//<</SCRIPT>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >\"}",
    statement:"{ `literal`: '<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >",
        variable:"<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >",
        concatenated:"<SCRIPT SRC=http://ha.ckers.org/xss.js?< B ><SCRIPT SRC=http://ha.ckers.org/xss.js?< B >"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<SCRIPT SRC=//ha.ckers.org/.j>\"}",
    statement:"{ `literal`: '<SCRIPT SRC=//ha.ckers.org/.j>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<SCRIPT SRC=//ha.ckers.org/.j>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<SCRIPT SRC=//ha.ckers.org/.j>",
        variable:"<SCRIPT SRC=//ha.ckers.org/.j>",
        concatenated:"<SCRIPT SRC=//ha.ckers.org/.j><SCRIPT SRC=//ha.ckers.org/.j>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<iframe src=http://ha.ckers.org/scriptlet.html <\"}",
    statement:"{ `literal`: '<iframe src=http://ha.ckers.org/scriptlet.html <', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<iframe src=http://ha.ckers.org/scriptlet.html <"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<iframe src=http://ha.ckers.org/scriptlet.html <",
        variable:"<iframe src=http://ha.ckers.org/scriptlet.html <",
        concatenated:"<iframe src=http://ha.ckers.org/scriptlet.html <<iframe src=http://ha.ckers.org/scriptlet.html <"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<u oncopy=alert()> Copy me</u>\"}",
    statement:"{ `literal`: '<u oncopy=alert()> Copy me</u>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<u oncopy=alert()> Copy me</u>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<u oncopy=alert()> Copy me</u>",
        variable:"<u oncopy=alert()> Copy me</u>",
        concatenated:"<u oncopy=alert()> Copy me</u><u oncopy=alert()> Copy me</u>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<i onwheel=alert(1)> Scroll over me </i>\"}",
    statement:"{ `literal`: '<i onwheel=alert(1)> Scroll over me </i>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<i onwheel=alert(1)> Scroll over me </i>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<i onwheel=alert(1)> Scroll over me </i>",
        variable:"<i onwheel=alert(1)> Scroll over me </i>",
        concatenated:"<i onwheel=alert(1)> Scroll over me </i><i onwheel=alert(1)> Scroll over me </i>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<plaintext>\"}",
    statement:"{ `literal`: '<plaintext>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<plaintext>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<plaintext>",
        variable:"<plaintext>",
        concatenated:"<plaintext><plaintext>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"http://a/%%30%30\"}",
    statement:"{ `literal`: 'http://a/%%30%30', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"http://a/%%30%30"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"http://a/%%30%30",
        variable:"http://a/%%30%30",
        concatenated:"http://a/%%30%30http://a/%%30%30"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"</textarea><script>alert(123)</script>\"}",
    statement:"{ `literal`: '</textarea><script>alert(123)</script>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"</textarea><script>alert(123)</script>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"</textarea><script>alert(123)</script>",
        variable:"</textarea><script>alert(123)</script>",
        concatenated:"</textarea><script>alert(123)</script></textarea><script>alert(123)</script>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"1;DROP TABLE users\"}",
    statement:"{ `literal`: '1;DROP TABLE users', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"1;DROP TABLE users"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"1;DROP TABLE users",
        variable:"1;DROP TABLE users",
        concatenated:"1;DROP TABLE users1;DROP TABLE users"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\" \"}",
    statement:"{ `literal`: ' ', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:" "
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:" ",
        variable:" ",
        concatenated:"  "
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"%\"}",
    statement:"{ `literal`: '%', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"%"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"%",
        variable:"%",
        concatenated:"%%"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"_\"}",
    statement:"{ `literal`: '_', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"_"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"_",
        variable:"_",
        concatenated:"__"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"-\"}",
    statement:"{ `literal`: '-', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"-"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"-",
        variable:"-",
        concatenated:"--"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"--\"}",
    statement:"{ `literal`: '--', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"--"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"--",
        variable:"--",
        concatenated:"----"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"--version\"}",
    statement:"{ `literal`: '--version', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"--version"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"--version",
        variable:"--version",
        concatenated:"--version--version"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"--help\"}",
    statement:"{ `literal`: '--help', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"--help"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"--help",
        variable:"--help",
        concatenated:"--help--help"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"USER\"}",
    statement:"{ `literal`: '$USER', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"$USER"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"$USER",
        variable:"$USER",
        concatenated:"$USER$USER"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"/dev/null; touch /tmp/blns.fail ; echo\"}",
    statement:"{ `literal`: '/dev/null; touch /tmp/blns.fail ; echo', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"/dev/null; touch /tmp/blns.fail ; echo"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"/dev/null; touch /tmp/blns.fail ; echo",
        variable:"/dev/null; touch /tmp/blns.fail ; echo",
        concatenated:"/dev/null; touch /tmp/blns.fail ; echo/dev/null; touch /tmp/blns.fail ; echo"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"`touch /tmp/blns.fail`\"}",
    statement:"{ `literal`: '`touch /tmp/blns.fail`', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"`touch /tmp/blns.fail`"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"`touch /tmp/blns.fail`",
        variable:"`touch /tmp/blns.fail`",
        concatenated:"`touch /tmp/blns.fail``touch /tmp/blns.fail`"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"(touch /tmp/blns.fail)\"}",
    statement:"{ `literal`: '$(touch /tmp/blns.fail)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"$(touch /tmp/blns.fail)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"$(touch /tmp/blns.fail)",
        variable:"$(touch /tmp/blns.fail)",
        concatenated:"$(touch /tmp/blns.fail)$(touch /tmp/blns.fail)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"@{[system \\\"touch /tmp/blns.fail\\\"]}\"}",
    statement:"{ `literal`: '@{[system \"touch /tmp/blns.fail\"]}', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"@{[system \"touch /tmp/blns.fail\"]}"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"@{[system \"touch /tmp/blns.fail\"]}",
        variable:"@{[system \"touch /tmp/blns.fail\"]}",
        concatenated:"@{[system \"touch /tmp/blns.fail\"]}@{[system \"touch /tmp/blns.fail\"]}"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"System(\\\"ls -al /\\\")\"}",
    statement:"{ `literal`: 'System(\"ls -al /\")', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"System(\"ls -al /\")"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"System(\"ls -al /\")",
        variable:"System(\"ls -al /\")",
        concatenated:"System(\"ls -al /\")System(\"ls -al /\")"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"`ls -al /`\"}",
    statement:"{ `literal`: '`ls -al /`', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"`ls -al /`"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"`ls -al /`",
        variable:"`ls -al /`",
        concatenated:"`ls -al /``ls -al /`"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Kernel.exec(\\\"ls -al /\\\")\"}",
    statement:"{ `literal`: 'Kernel.exec(\"ls -al /\")', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Kernel.exec(\"ls -al /\")"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Kernel.exec(\"ls -al /\")",
        variable:"Kernel.exec(\"ls -al /\")",
        concatenated:"Kernel.exec(\"ls -al /\")Kernel.exec(\"ls -al /\")"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Kernel.exit(1)\"}",
    statement:"{ `literal`: 'Kernel.exit(1)', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Kernel.exit(1)"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Kernel.exit(1)",
        variable:"Kernel.exit(1)",
        concatenated:"Kernel.exit(1)Kernel.exit(1)"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \\\"file:///etc/passwd\\\" >]><foo>&xxe;</foo>\"}",
    statement:"{ `literal`: '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo>', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo>"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo>",
        variable:"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo>",
        concatenated:"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo><?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]><foo>&xxe;</foo>"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"HOME\"}",
    statement:"{ `literal`: '$HOME', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"$HOME"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"$HOME",
        variable:"$HOME",
        concatenated:"$HOME$HOME"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"%d\"}",
    statement:"{ `literal`: '%d', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"%d"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"%d",
        variable:"%d",
        concatenated:"%d%d"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"%s\"}",
    statement:"{ `literal`: '%s', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"%s"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"%s",
        variable:"%s",
        concatenated:"%s%s"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"{0}\"}",
    statement:"{ `literal`: '{0}', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"{0}"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"{0}",
        variable:"{0}",
        concatenated:"{0}{0}"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"%*.*s\"}",
    statement:"{ `literal`: '%*.*s', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"%*.*s"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"%*.*s",
        variable:"%*.*s",
        concatenated:"%*.*s%*.*s"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"File:///\"}",
    statement:"{ `literal`: 'File:///', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"File:///"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"File:///",
        variable:"File:///",
        concatenated:"File:///File:///"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"../../../../../../../../../../../etc/passwd%00\"}",
    statement:"{ `literal`: '../../../../../../../../../../../etc/passwd%00', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"../../../../../../../../../../../etc/passwd%00"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"../../../../../../../../../../../etc/passwd%00",
        variable:"../../../../../../../../../../../etc/passwd%00",
        concatenated:"../../../../../../../../../../../etc/passwd%00../../../../../../../../../../../etc/passwd%00"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"../../../../../../../../../../../etc/hosts\"}",
    statement:"{ `literal`: '../../../../../../../../../../../etc/hosts', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"../../../../../../../../../../../etc/hosts"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"../../../../../../../../../../../etc/hosts",
        variable:"../../../../../../../../../../../etc/hosts",
        concatenated:"../../../../../../../../../../../etc/hosts../../../../../../../../../../../etc/hosts"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"() { 0; }; touch /tmp/blns.shellshock1.fail;\"}",
    statement:"{ `literal`: '() { 0; }; touch /tmp/blns.shellshock1.fail;', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"() { 0; }; touch /tmp/blns.shellshock1.fail;"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"() { 0; }; touch /tmp/blns.shellshock1.fail;",
        variable:"() { 0; }; touch /tmp/blns.shellshock1.fail;",
        concatenated:"() { 0; }; touch /tmp/blns.shellshock1.fail;() { 0; }; touch /tmp/blns.shellshock1.fail;"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"() { _; } >_[(())] { touch /tmp/blns.shellshock2.fail; }\"}",
    statement:"{ `literal`: '() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }",
        variable:"() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }",
        concatenated:"() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"+++ATH0\"}",
    statement:"{ `literal`: '+++ATH0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"+++ATH0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"+++ATH0",
        variable:"+++ATH0",
        concatenated:"+++ATH0+++ATH0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"CON\"}",
    statement:"{ `literal`: 'CON', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"CON"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"CON",
        variable:"CON",
        concatenated:"CONCON"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"PRN\"}",
    statement:"{ `literal`: 'PRN', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"PRN"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"PRN",
        variable:"PRN",
        concatenated:"PRNPRN"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"AUX\"}",
    statement:"{ `literal`: 'AUX', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"AUX"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"AUX",
        variable:"AUX",
        concatenated:"AUXAUX"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"CLOCK\"}",
    statement:"{ `literal`: 'CLOCK$', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"CLOCK$"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"CLOCK$",
        variable:"CLOCK$",
        concatenated:"CLOCK$CLOCK$"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"NUL\"}",
    statement:"{ `literal`: 'NUL', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"NUL"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"NUL",
        variable:"NUL",
        concatenated:"NULNUL"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"A:\"}",
    statement:"{ `literal`: 'A:', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"A:"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"A:",
        variable:"A:",
        concatenated:"A:A:"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"ZZ:\"}",
    statement:"{ `literal`: 'ZZ:', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"ZZ:"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"ZZ:",
        variable:"ZZ:",
        concatenated:"ZZ:ZZ:"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"COM1\"}",
    statement:"{ `literal`: 'COM1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"COM1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"COM1",
        variable:"COM1",
        concatenated:"COM1COM1"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"LPT1\"}",
    statement:"{ `literal`: 'LPT1', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"LPT1"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"LPT1",
        variable:"LPT1",
        concatenated:"LPT1LPT1"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"LPT2\"}",
    statement:"{ `literal`: 'LPT2', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"LPT2"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"LPT2",
        variable:"LPT2",
        concatenated:"LPT2LPT2"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"LPT3\"}",
    statement:"{ `literal`: 'LPT3', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"LPT3"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"LPT3",
        variable:"LPT3",
        concatenated:"LPT3LPT3"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"COM2\"}",
    statement:"{ `literal`: 'COM2', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"COM2"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"COM2",
        variable:"COM2",
        concatenated:"COM2COM2"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"COM3\"}",
    statement:"{ `literal`: 'COM3', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"COM3"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"COM3",
        variable:"COM3",
        concatenated:"COM3COM3"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"COM4\"}",
    statement:"{ `literal`: 'COM4', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"COM4"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"COM4",
        variable:"COM4",
        concatenated:"COM4COM4"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"DCC SEND STARTKEYLOGGER 0 0 0\"}",
    statement:"{ `literal`: 'DCC SEND STARTKEYLOGGER 0 0 0', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"DCC SEND STARTKEYLOGGER 0 0 0"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"DCC SEND STARTKEYLOGGER 0 0 0",
        variable:"DCC SEND STARTKEYLOGGER 0 0 0",
        concatenated:"DCC SEND STARTKEYLOGGER 0 0 0DCC SEND STARTKEYLOGGER 0 0 0"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Scunthorpe General Hospital\"}",
    statement:"{ `literal`: 'Scunthorpe General Hospital', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Scunthorpe General Hospital"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Scunthorpe General Hospital",
        variable:"Scunthorpe General Hospital",
        concatenated:"Scunthorpe General HospitalScunthorpe General Hospital"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Penistone Community Church\"}",
    statement:"{ `literal`: 'Penistone Community Church', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Penistone Community Church"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Penistone Community Church",
        variable:"Penistone Community Church",
        concatenated:"Penistone Community ChurchPenistone Community Church"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Lightwater Country Park\"}",
    statement:"{ `literal`: 'Lightwater Country Park', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Lightwater Country Park"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Lightwater Country Park",
        variable:"Lightwater Country Park",
        concatenated:"Lightwater Country ParkLightwater Country Park"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Jimmy Clitheroe\"}",
    statement:"{ `literal`: 'Jimmy Clitheroe', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Jimmy Clitheroe"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Jimmy Clitheroe",
        variable:"Jimmy Clitheroe",
        concatenated:"Jimmy ClitheroeJimmy Clitheroe"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Horniman Museum\"}",
    statement:"{ `literal`: 'Horniman Museum', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Horniman Museum"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Horniman Museum",
        variable:"Horniman Museum",
        concatenated:"Horniman MuseumHorniman Museum"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"shitake mushrooms\"}",
    statement:"{ `literal`: 'shitake mushrooms', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"shitake mushrooms"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"shitake mushrooms",
        variable:"shitake mushrooms",
        concatenated:"shitake mushroomsshitake mushrooms"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"RomansInSussex.co.uk\"}",
    statement:"{ `literal`: 'RomansInSussex.co.uk', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"RomansInSussex.co.uk"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"RomansInSussex.co.uk",
        variable:"RomansInSussex.co.uk",
        concatenated:"RomansInSussex.co.ukRomansInSussex.co.uk"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"http://www.cum.qc.ca/\"}",
    statement:"{ `literal`: 'http://www.cum.qc.ca/', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"http://www.cum.qc.ca/"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"http://www.cum.qc.ca/",
        variable:"http://www.cum.qc.ca/",
        concatenated:"http://www.cum.qc.ca/http://www.cum.qc.ca/"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Craig Cockburn, Software Specialist\"}",
    statement:"{ `literal`: 'Craig Cockburn, Software Specialist', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Craig Cockburn, Software Specialist"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Craig Cockburn, Software Specialist",
        variable:"Craig Cockburn, Software Specialist",
        concatenated:"Craig Cockburn, Software SpecialistCraig Cockburn, Software Specialist"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Linda Callahan\"}",
    statement:"{ `literal`: 'Linda Callahan', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Linda Callahan"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Linda Callahan",
        variable:"Linda Callahan",
        concatenated:"Linda CallahanLinda Callahan"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Dr. Herman I. Libshitz\"}",
    statement:"{ `literal`: 'Dr. Herman I. Libshitz', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Dr. Herman I. Libshitz"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Dr. Herman I. Libshitz",
        variable:"Dr. Herman I. Libshitz",
        concatenated:"Dr. Herman I. LibshitzDr. Herman I. Libshitz"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"magna cum laude\"}",
    statement:"{ `literal`: 'magna cum laude', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"magna cum laude"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"magna cum laude",
        variable:"magna cum laude",
        concatenated:"magna cum laudemagna cum laude"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Super Bowl XXX\"}",
    statement:"{ `literal`: 'Super Bowl XXX', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Super Bowl XXX"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Super Bowl XXX",
        variable:"Super Bowl XXX",
        concatenated:"Super Bowl XXXSuper Bowl XXX"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"medieval erection of parapets\"}",
    statement:"{ `literal`: 'medieval erection of parapets', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"medieval erection of parapets"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"medieval erection of parapets",
        variable:"medieval erection of parapets",
        concatenated:"medieval erection of parapetsmedieval erection of parapets"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"evaluate\"}",
    statement:"{ `literal`: 'evaluate', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"evaluate"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"evaluate",
        variable:"evaluate",
        concatenated:"evaluateevaluate"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"mocha\"}",
    statement:"{ `literal`: 'mocha', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"mocha"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"mocha",
        variable:"mocha",
        concatenated:"mochamocha"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"expression\"}",
    statement:"{ `literal`: 'expression', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"expression"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"expression",
        variable:"expression",
        concatenated:"expressionexpression"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Arsenal canal\"}",
    statement:"{ `literal`: 'Arsenal canal', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Arsenal canal"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Arsenal canal",
        variable:"Arsenal canal",
        concatenated:"Arsenal canalArsenal canal"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"classic\"}",
    statement:"{ `literal`: 'classic', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"classic"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"classic",
        variable:"classic",
        concatenated:"classicclassic"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Tyson Gay\"}",
    statement:"{ `literal`: 'Tyson Gay', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Tyson Gay"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Tyson Gay",
        variable:"Tyson Gay",
        concatenated:"Tyson GayTyson Gay"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Dick Van Dyke\"}",
    statement:"{ `literal`: 'Dick Van Dyke', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Dick Van Dyke"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Dick Van Dyke",
        variable:"Dick Van Dyke",
        concatenated:"Dick Van DykeDick Van Dyke"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"basement\"}",
    statement:"{ `literal`: 'basement', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"basement"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"basement",
        variable:"basement",
        concatenated:"basementbasement"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Roses are \\x1b[0;31mred\\x1b[0m, violets are \\x1b[0;34mblue. Hope you enjoy terminal hue\"}",
    statement:"{ `literal`: 'Roses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hue', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Roses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hue"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Roses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hue",
        variable:"Roses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hue",
        concatenated:"Roses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hueRoses are \x1b[0;31mred\x1b[0m, violets are \x1b[0;34mblue. Hope you enjoy terminal hue"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"But now...\\x1b[20Cfor my greatest trick...\\x1b[8m\"}",
    statement:"{ `literal`: 'But now...\x1b[20Cfor my greatest trick...\x1b[8m', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"But now...\x1b[20Cfor my greatest trick...\x1b[8m"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"But now...\x1b[20Cfor my greatest trick...\x1b[8m",
        variable:"But now...\x1b[20Cfor my greatest trick...\x1b[8m",
        concatenated:"But now...\x1b[20Cfor my greatest trick...\x1b[8mBut now...\x1b[20Cfor my greatest trick...\x1b[8m"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"The quic\\b\\b\\b\\b\\b\\bk brown fo\\a\\a\\a\\a\\a\\a\\a\\a\\a\\a\\ax... [Beeeep]\"}",
    statement:"{ `literal`: 'The quic\b\b\b\b\b\bk brown fo\a\a\a\a\a\a\a\a\a\a\ax... [Beeeep]', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"The quic\b\b\b\b\b\bk brown fo\a\a\a\a\a\a\a\a\a\a\ax... [Beeeep]"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"The quic\b\b\b\b\b\bk brown fo\a\a\a\a\a\a\a\a\a\a\ax... [Beeeep]",
        variable:"The quic\b\b\b\b\b\bk brown fo\a\a\a\a\a\a\a\a\a\a\ax... [Beeeep]",
        concatenated:"The quic\b\b\b\b\b\bk brown fo\a\a\a\a\a\a\a\a\a\a\ax... [Beeeep]The quic\b\b\b\b\b\bk brown fo\a\a\a\a\a\a\a\a\a\a\ax... [Beeeep]"
      }
    }
  },
  {
    name:"big list of naughty strings{str:\"Power\\u0644\\u064f\\u0644\\u064f\\u0635\\u0651\\u0628\\u064f\\u0644\\u064f\\u0644\\u0635\\u0651\\u0628\\u064f\\u0631\\u0631\\u064b \\u0963 \\u0963h \\u0963 \\u0963\\u5197\"}",
    statement:"{ `literal`: 'Powerلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗', `variable`: env_str, `concatenated`: env_str || env_str }",
    env:{
      env_str:"Powerلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗"
    },
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:{
        literal:"Powerلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗",
        variable:"Powerلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗",
        concatenated:"Powerلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗Powerلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗"
      }
    }
  }
]