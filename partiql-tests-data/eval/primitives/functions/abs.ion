abs::[
  {
    name:"ABS(1) INT",
    statement:"ABS(1)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:1
    }
  },
  {
    name:"ABS(1.0) DECIMAL",
    statement:"ABS(1.0)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:10d-1
    }
  },
  {
    name:"ABS(1.9999999999999999999900)",
    statement:"ABS(1.9999999999999999999900)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:19999999999999999999900d-22
    }
  },
  {
    name:"ABS(-1)",
    statement:"ABS(-1)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:1
    }
  },
  {
    name:"ABS(-1.0)",
    statement:"ABS(-1.0)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:10d-1
    }
  },
  {
    name:"ABS(-1.9999999999999999999900)",
    statement:"ABS(-1.9999999999999999999900)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:19999999999999999999900d-22
    }
  },
  {
    name:"ABS(MISSING) null propogation",
    statement:"ABS(MISSING)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:$missing::null,
    }
  },
  {
    name:"ABS(NULL) null propogation",
    statement:"ABS(NULL)",
    assert:{
      result:EvaluationSuccess,
      evalMode:[
        EvalModeCoerce,
        EvalModeError
      ],
      output:null
    }
  },
  {
    name:"ABS('foo')",
    statement:"ABS('foo')",
    assert: [
      {
        evalMode: EvalModeError,
        result:EvaluationFail,
      },
      {
        result:EvaluationSuccess,
        evalMode: EvalModeCoerce,
        output:$missing::null
      }
    ]
  }
]
