{
  name: "TIMESTAMP - invalid YEAR field - beyond 9999",
  statement: "TIMESTAMP '12345-03-10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid YEAR field - minus before year",
  statement: "TIMESTAMP '-9999-03-10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid YEAR field - plus before year",
  statement: "TIMESTAMP '+9999-03-10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MONTH field - above upper bound",
  statement: "TIMESTAMP '2021-13-01 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MONTH field - month of zero",
  statement: "TIMESTAMP '2021-00-01 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MONTH field - minus before month",
  statement: "TIMESTAMP '2021--03-10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MONTH field - plus before month",
  statement: "TIMESTAMP '2021-+03-10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for January",
  statement: "TIMESTAMP '2021-01-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for February leap year",
  statement: "TIMESTAMP '2012-02-30 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for February non leap year",
  statement: "TIMESTAMP '2021-02-29 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for March",
  statement: "TIMESTAMP '2021-03-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for April",
  statement: "TIMESTAMP '2021-04-31 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for May",
  statement: "TIMESTAMP '2021-05-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for June",
  statement: "TIMESTAMP '2021-06-31 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for July",
  statement: "TIMESTAMP '2021-07-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for August",
  statement: "TIMESTAMP '2021-08-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for September",
  statement: "TIMESTAMP '2021-09-31 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for October",
  statement: "TIMESTAMP '2021-10-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for November",
  statement: "TIMESTAMP '2021-11-31 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range for December",
  statement: "TIMESTAMP '2021-12-32 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - day of zero",
  statement: "TIMESTAMP '2021-01-00 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid DAY field - out of range",
  statement: "TIMESTAMP '2021-03-12345 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid Day field - minus before day",
  statement: "TIMESTAMP '2021-03--10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid Day field - plus before day",
  statement: "TIMESTAMP '2021-03-+10 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid literal Format - random string",
  statement: "TIMESTAMP 'timestamp'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid HOUR field - above upper bound",
  statement: "TIMESTAMP '2021-03-01 24:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid HOUR field - Negative value",
  statement: "TIMESTAMP '2021-03-01 -01:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid HOUR field - plus sign",
  statement: "TIMESTAMP '2021-03-01 +01:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid HOUR field - plus sign",
  statement: "TIMESTAMP '2021-03-01 +01:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MINUTE field - above upper bound",
  statement: "TIMESTAMP '2021-03-01 00:60:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MINUTE field - negative value",
  statement: "TIMESTAMP '2021-03-01 00:-01:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid MINUTE field - plus sign",
  statement: "TIMESTAMP '2021-03-01 00:+01:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

// Setting to 62 to take account of leap second, if any implement does care.
{
  name: "TIMESTAMP - invalid SECOND field - above upper bound",
  statement: "TIMESTAMP '2021-03-01 00:00:62'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid SECOND field - negative value",
  statement: "TIMESTAMP '2021-03-01 00:00:-01'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid SECOND field - plus sign",
  statement: "TIMESTAMP '2021-03-01 00:00:+01'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid timezone_hour field - above upper bound",
  statement: "TIMESTAMP '2021-03-01 00:00:00+24:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid timezone_hour field - below lower bound",
  statement: "TIMESTAMP '2021-03-01 00:00:00-24:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid timezone_minute field - above upper bound",
  statement: "TIMESTAMP '2021-03-01 00:00:00+00:60'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid timezone_hour field - below lower bound",
  statement: "TIMESTAMP '2021-03-01 00:00:00-00:60'",
  assert: {
    result: StaticAnalysisFail
  },
}

{
  name: "TIMESTAMP - invalid Precision - negative value",
  statement: "TIMESTAMP(-1) '2021-03-01 00:00:00'",
  assert: {
    result: StaticAnalysisFail
  },
}

// NOT sure if we want to keep the following,
// as an implementation may choose to extend the syntax
// and made the following valid

//{
//  name: "TIMESTAMP - invalid day field - missing padding zero",
//  statement: "TIMESTAMP '2021-03-1 00:00:00'",
//  assert: {
//    result: StaticAnalysisFail
//  },
//}

//{
//  name: "TIMESTAMP - invalid month field - missing padding zero",
//  statement: "TIMESTAMP '2021-3-01 00:00:00'",
//  assert: {
//    result: StaticAnalysisFail
//  },
//}

//{
//  name: "TIMESTAMP - invalid YEAR field - 2 digit year",
//  statement: "TIMESTAMP '21-03-01 00:00:00'",
//  assert: {
//    result: StaticAnalysisFail
//  },
//}

//{
//  name: "TIMESTAMP - invalid Date Part format - missing dash",
//  statement: "TIMESTAMP '20210310 00:00:00'",
//  assert: {
//    result: StaticAnalysisFail
//  },
//}

// TODO : should we support this?
//{
//  name: "TIMESTAMP",
//  statement: "TIMESTAMP '2021-03-01 00:00:00.'",
//  assert: {
//    result: StaticAnalysisFail
//  },
//}